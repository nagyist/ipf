/**
 * COCTMT300000UV04SubstanceAdministrationIntent.java
 * <p>
 * File generated from the coctmt300000UV04::COCTMT300000UV04SubstanceAdministrationIntent uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.coctmt300000UV04;

import java.io.Serial;
import java.util.ArrayList;
import java.util.List;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Marshaller;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.ihe.gazelle.gen.common.ConstraintValidatorModule;

import org.w3c.dom.Document;
import org.w3c.dom.Node;


/**
 * Description of the class COCTMT300000UV04SubstanceAdministrationIntent.
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "COCT_MT300000UV04.SubstanceAdministrationIntent", propOrder = {
	"realmCode",
	"typeId",
	"templateId",
	"id",
	"effectiveTime",
	"priorityCode",
	"inFulfillmentOf",
	"pertinentInformation",
	"subjectOf",
	"classCode",
	"moodCode",
	"nullFlavor"
})
@XmlRootElement(name = "COCT_MT300000UV04.SubstanceAdministrationIntent")
public class COCTMT300000UV04SubstanceAdministrationIntent implements java.io.Serializable {
	
	/**
	 * 
	 */
	@Serial
    private static final long serialVersionUID = 1L;

	
	@XmlElement(name = "realmCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode;
	@XmlElement(name = "typeId", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II typeId;
	@XmlElement(name = "templateId", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> templateId;
	@XmlElement(name = "id", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II id;
	@XmlElement(name = "effectiveTime", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS effectiveTime;
	@XmlElement(name = "priorityCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CS priorityCode;
	@XmlElement(name = "inFulfillmentOf", required = true, namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04InFulfillmentOf inFulfillmentOf;
	@XmlElement(name = "pertinentInformation", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04PertinentInformation2 pertinentInformation;
	@XmlElement(name = "subjectOf", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject> subjectOf;
	@XmlAttribute(name = "classCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.ActClass classCode;
	@XmlAttribute(name = "moodCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.ActMoodIntent moodCode;
	@XmlAttribute(name = "nullFlavor")
	public net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor;
	
	/**
	 * An attribute containing marshalled element node
	 */
	@XmlTransient
	private org.w3c.dom.Node _xmlNodePresentation;
	
	
	/**
	 * Return realmCode.
	 * @return realmCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> getRealmCode() {
		if (realmCode == null) {
	        realmCode = new ArrayList<>();
	    }
	    return realmCode;
	}
	
	/**
	 * Set a value to attribute realmCode.
     */
	public void setRealmCode(List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode) {
	    this.realmCode = realmCode;
	}
	
	
	
	/**
	 * Add a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to add.
	 */
	public void addRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.add(realmCode_elt);
	}
	
	/**
	 * Remove a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to remove
	 */
	public void removeRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.remove(realmCode_elt);
	}
	
	/**
	 * Return typeId.
	 * @return typeId
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getTypeId() {
	    return typeId;
	}
	
	/**
	 * Set a value to attribute typeId.
     */
	public void setTypeId(net.ihe.gazelle.hl7v3.datatypes.II typeId) {
	    this.typeId = typeId;
	}
	
	
	
	
	/**
	 * Return templateId.
	 * @return templateId
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getTemplateId() {
		if (templateId == null) {
	        templateId = new ArrayList<>();
	    }
	    return templateId;
	}
	
	/**
	 * Set a value to attribute templateId.
     */
	public void setTemplateId(List<net.ihe.gazelle.hl7v3.datatypes.II> templateId) {
	    this.templateId = templateId;
	}
	
	
	
	/**
	 * Add a templateId to the templateId collection.
	 * @param templateId_elt Element to add.
	 */
	public void addTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.add(templateId_elt);
	}
	
	/**
	 * Remove a templateId to the templateId collection.
	 * @param templateId_elt Element to remove
	 */
	public void removeTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.remove(templateId_elt);
	}
	
	/**
	 * Return id.
	 * @return id
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getId() {
	    return id;
	}
	
	/**
	 * Set a value to attribute id.
     */
	public void setId(net.ihe.gazelle.hl7v3.datatypes.II id) {
	    this.id = id;
	}
	
	
	
	
	/**
	 * Return effectiveTime.
	 * @return effectiveTime
	 */
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS getEffectiveTime() {
	    return effectiveTime;
	}
	
	/**
	 * Set a value to attribute effectiveTime.
     */
	public void setEffectiveTime(net.ihe.gazelle.hl7v3.datatypes.IVLTS effectiveTime) {
	    this.effectiveTime = effectiveTime;
	}
	
	
	
	
	/**
	 * Return priorityCode.
	 * @return priorityCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CS getPriorityCode() {
	    return priorityCode;
	}
	
	/**
	 * Set a value to attribute priorityCode.
     */
	public void setPriorityCode(net.ihe.gazelle.hl7v3.datatypes.CS priorityCode) {
	    this.priorityCode = priorityCode;
	}
	
	
	
	
	/**
	 * Return inFulfillmentOf.
	 * @return inFulfillmentOf
	 */
	public net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04InFulfillmentOf getInFulfillmentOf() {
	    return inFulfillmentOf;
	}
	
	/**
	 * Set a value to attribute inFulfillmentOf.
     */
	public void setInFulfillmentOf(net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04InFulfillmentOf inFulfillmentOf) {
	    this.inFulfillmentOf = inFulfillmentOf;
	}
	
	
	
	
	/**
	 * Return pertinentInformation.
	 * @return pertinentInformation
	 */
	public net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04PertinentInformation2 getPertinentInformation() {
	    return pertinentInformation;
	}
	
	/**
	 * Set a value to attribute pertinentInformation.
     */
	public void setPertinentInformation(net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04PertinentInformation2 pertinentInformation) {
	    this.pertinentInformation = pertinentInformation;
	}
	
	
	
	
	/**
	 * Return subjectOf.
	 * @return subjectOf
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject> getSubjectOf() {
		if (subjectOf == null) {
	        subjectOf = new ArrayList<>();
	    }
	    return subjectOf;
	}
	
	/**
	 * Set a value to attribute subjectOf.
     */
	public void setSubjectOf(List<net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject> subjectOf) {
	    this.subjectOf = subjectOf;
	}
	
	
	
	/**
	 * Add a subjectOf to the subjectOf collection.
	 * @param subjectOf_elt Element to add.
	 */
	public void addSubjectOf(net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject subjectOf_elt) {
	    this.subjectOf.add(subjectOf_elt);
	}
	
	/**
	 * Remove a subjectOf to the subjectOf collection.
	 * @param subjectOf_elt Element to remove
	 */
	public void removeSubjectOf(net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject subjectOf_elt) {
	    this.subjectOf.remove(subjectOf_elt);
	}
	
	/**
	 * Return classCode.
	 * @return classCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ActClass getClassCode() {
	    return classCode;
	}
	
	/**
	 * Set a value to attribute classCode.
     */
	public void setClassCode(net.ihe.gazelle.hl7v3.voc.ActClass classCode) {
	    this.classCode = classCode;
	}
	
	
	
	
	/**
	 * Return moodCode.
	 * @return moodCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ActMoodIntent getMoodCode() {
	    return moodCode;
	}
	
	/**
	 * Set a value to attribute moodCode.
     */
	public void setMoodCode(net.ihe.gazelle.hl7v3.voc.ActMoodIntent moodCode) {
	    this.moodCode = moodCode;
	}
	
	
	
	
	/**
	 * Return nullFlavor.
	 * @return nullFlavor
	 */
	public net.ihe.gazelle.hl7v3.voc.NullFlavor getNullFlavor() {
	    return nullFlavor;
	}
	
	/**
	 * Set a value to attribute nullFlavor.
     */
	public void setNullFlavor(net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor) {
	    this.nullFlavor = nullFlavor;
	}
	
	
	
	
	
	public Node get_xmlNodePresentation() {
		if (_xmlNodePresentation == null){
				JAXBContext jc;
				DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
				dbf.setNamespaceAware(true);
				DocumentBuilder db = null;
				Document doc = null;
				try {
					db = dbf.newDocumentBuilder();
					doc = db.newDocument();
				} catch (ParserConfigurationException ignored) {}
				try {
					jc = JAXBContext.newInstance("net.ihe.gazelle.hl7v3.coctmt300000UV04");
					Marshaller m = jc.createMarshaller();
					m.marshal(this, doc);
					_xmlNodePresentation = doc.getElementsByTagNameNS("urn:hl7-org:v3", "COCT_MT300000UV04.SubstanceAdministrationIntent").item(0);
				} catch (JAXBException e) {
					try{
						db = dbf.newDocumentBuilder();
						_xmlNodePresentation = db.newDocument();
					}
					catch(Exception ignored){}
				}
			}
			return _xmlNodePresentation;
	}
	
	public void set_xmlNodePresentation(Node _xmlNodePresentation) {
		this._xmlNodePresentation = _xmlNodePresentation;
	}
	
	
	

	
	/**
     * validate by a module of validation
     * 
     */
   public static void validateByModule(COCTMT300000UV04SubstanceAdministrationIntent cOCTMT300000UV04SubstanceAdministrationIntent, String _location, ConstraintValidatorModule cvm, List<net.ihe.gazelle.validation.Notification> diagnostic){
   		if (cOCTMT300000UV04SubstanceAdministrationIntent != null){
   			cvm.validate(cOCTMT300000UV04SubstanceAdministrationIntent, _location, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CS realmCode: cOCTMT300000UV04SubstanceAdministrationIntent.getRealmCode()){
					net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(realmCode, _location + "/realmCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getTypeId(), _location + "/typeId", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II templateId: cOCTMT300000UV04SubstanceAdministrationIntent.getTemplateId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(templateId, _location + "/templateId[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getId(), _location + "/id", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.IVLTS.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getEffectiveTime(), _location + "/effectiveTime", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getPriorityCode(), _location + "/priorityCode", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04InFulfillmentOf.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getInFulfillmentOf(), _location + "/inFulfillmentOf", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04PertinentInformation2.validateByModule(cOCTMT300000UV04SubstanceAdministrationIntent.getPertinentInformation(), _location + "/pertinentInformation", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject subjectOf: cOCTMT300000UV04SubstanceAdministrationIntent.getSubjectOf()){
					net.ihe.gazelle.hl7v3.coctmt300000UV04.COCTMT300000UV04Subject.validateByModule(subjectOf, _location + "/subjectOf[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
    	}
    }

}