/**
 * RoleClassCoveredParty.java
 * <p>
 * File generated from the voc::RoleClassCoveredParty uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration RoleClassCoveredParty.
 *
 */

@XmlType(name = "RoleClassCoveredParty")
@XmlEnum
@XmlRootElement(name = "RoleClassCoveredParty")
public enum RoleClassCoveredParty {
	@XmlEnumValue("CLAIM")
	CLAIM("CLAIM"),
	@XmlEnumValue("COVPTY")
	COVPTY("COVPTY"),
	@XmlEnumValue("DEPEN")
	DEPEN("DEPEN"),
	@XmlEnumValue("INDIV")
	INDIV("INDIV"),
	@XmlEnumValue("NAMED")
	NAMED("NAMED"),
	@XmlEnumValue("PROG")
	PROG("PROG"),
	@XmlEnumValue("SUBSCR")
	SUBSCR("SUBSCR");
	
	private final String value;

    RoleClassCoveredParty(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static RoleClassCoveredParty fromValue(String v) {
        for (RoleClassCoveredParty c: RoleClassCoveredParty.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}