/**
 * RaceAlaskanNativeEskimo.java
 *
 * File generated from the voc::RaceAlaskanNativeEskimo uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration RaceAlaskanNativeEskimo.
 *
 */

@XmlType(name = "RaceAlaskanNativeEskimo")
@XmlEnum
@XmlRootElement(name = "RaceAlaskanNativeEskimo")
public enum RaceAlaskanNativeEskimo {
	@XmlEnumValue("1840-8")
	_18408("1840-8"),
	@XmlEnumValue("1842-4")
	_18424("1842-4"),
	@XmlEnumValue("1844-0")
	_18440("1844-0"),
	@XmlEnumValue("1845-7")
	_18457("1845-7"),
	@XmlEnumValue("1846-5")
	_18465("1846-5"),
	@XmlEnumValue("1847-3")
	_18473("1847-3"),
	@XmlEnumValue("1848-1")
	_18481("1848-1"),
	@XmlEnumValue("1849-9")
	_18499("1849-9"),
	@XmlEnumValue("1850-7")
	_18507("1850-7"),
	@XmlEnumValue("1851-5")
	_18515("1851-5"),
	@XmlEnumValue("1852-3")
	_18523("1852-3"),
	@XmlEnumValue("1853-1")
	_18531("1853-1"),
	@XmlEnumValue("1854-9")
	_18549("1854-9"),
	@XmlEnumValue("1855-6")
	_18556("1855-6"),
	@XmlEnumValue("1856-4")
	_18564("1856-4"),
	@XmlEnumValue("1857-2")
	_18572("1857-2"),
	@XmlEnumValue("1858-0")
	_18580("1858-0"),
	@XmlEnumValue("1859-8")
	_18598("1859-8"),
	@XmlEnumValue("1860-6")
	_18606("1860-6"),
	@XmlEnumValue("1861-4")
	_18614("1861-4"),
	@XmlEnumValue("1862-2")
	_18622("1862-2"),
	@XmlEnumValue("1863-0")
	_18630("1863-0"),
	@XmlEnumValue("1864-8")
	_18648("1864-8"),
	@XmlEnumValue("1865-5")
	_18655("1865-5"),
	@XmlEnumValue("1866-3")
	_18663("1866-3"),
	@XmlEnumValue("1867-1")
	_18671("1867-1"),
	@XmlEnumValue("1868-9")
	_18689("1868-9"),
	@XmlEnumValue("1869-7")
	_18697("1869-7"),
	@XmlEnumValue("1870-5")
	_18705("1870-5"),
	@XmlEnumValue("1871-3")
	_18713("1871-3"),
	@XmlEnumValue("1872-1")
	_18721("1872-1"),
	@XmlEnumValue("1873-9")
	_18739("1873-9"),
	@XmlEnumValue("1874-7")
	_18747("1874-7"),
	@XmlEnumValue("1875-4")
	_18754("1875-4"),
	@XmlEnumValue("1876-2")
	_18762("1876-2"),
	@XmlEnumValue("1877-0")
	_18770("1877-0"),
	@XmlEnumValue("1878-8")
	_18788("1878-8"),
	@XmlEnumValue("1879-6")
	_18796("1879-6"),
	@XmlEnumValue("1880-4")
	_18804("1880-4"),
	@XmlEnumValue("1881-2")
	_18812("1881-2"),
	@XmlEnumValue("1882-0")
	_18820("1882-0"),
	@XmlEnumValue("1883-8")
	_18838("1883-8"),
	@XmlEnumValue("1884-6")
	_18846("1884-6"),
	@XmlEnumValue("1885-3")
	_18853("1885-3"),
	@XmlEnumValue("1886-1")
	_18861("1886-1"),
	@XmlEnumValue("1887-9")
	_18879("1887-9"),
	@XmlEnumValue("1888-7")
	_18887("1888-7"),
	@XmlEnumValue("1889-5")
	_18895("1889-5"),
	@XmlEnumValue("1891-1")
	_18911("1891-1"),
	@XmlEnumValue("1892-9")
	_18929("1892-9"),
	@XmlEnumValue("1893-7")
	_18937("1893-7"),
	@XmlEnumValue("1894-5")
	_18945("1894-5"),
	@XmlEnumValue("1896-0")
	_18960("1896-0"),
	@XmlEnumValue("1897-8")
	_18978("1897-8"),
	@XmlEnumValue("1898-6")
	_18986("1898-6"),
	@XmlEnumValue("1899-4")
	_18994("1899-4"),
	@XmlEnumValue("1900-0")
	_19000("1900-0"),
	@XmlEnumValue("1901-8")
	_19018("1901-8"),
	@XmlEnumValue("1902-6")
	_19026("1902-6"),
	@XmlEnumValue("1903-4")
	_19034("1903-4"),
	@XmlEnumValue("1904-2")
	_19042("1904-2"),
	@XmlEnumValue("1905-9")
	_19059("1905-9"),
	@XmlEnumValue("1906-7")
	_19067("1906-7"),
	@XmlEnumValue("1907-5")
	_19075("1907-5"),
	@XmlEnumValue("1908-3")
	_19083("1908-3"),
	@XmlEnumValue("1909-1")
	_19091("1909-1"),
	@XmlEnumValue("1910-9")
	_19109("1910-9"),
	@XmlEnumValue("1911-7")
	_19117("1911-7"),
	@XmlEnumValue("1912-5")
	_19125("1912-5"),
	@XmlEnumValue("1913-3")
	_19133("1913-3"),
	@XmlEnumValue("1914-1")
	_19141("1914-1"),
	@XmlEnumValue("1915-8")
	_19158("1915-8"),
	@XmlEnumValue("1916-6")
	_19166("1916-6"),
	@XmlEnumValue("1917-4")
	_19174("1917-4"),
	@XmlEnumValue("1918-2")
	_19182("1918-2"),
	@XmlEnumValue("1919-0")
	_19190("1919-0"),
	@XmlEnumValue("1920-8")
	_19208("1920-8"),
	@XmlEnumValue("1921-6")
	_19216("1921-6"),
	@XmlEnumValue("1922-4")
	_19224("1922-4"),
	@XmlEnumValue("1923-2")
	_19232("1923-2"),
	@XmlEnumValue("1924-0")
	_19240("1924-0"),
	@XmlEnumValue("1925-7")
	_19257("1925-7"),
	@XmlEnumValue("1926-5")
	_19265("1926-5"),
	@XmlEnumValue("1927-3")
	_19273("1927-3"),
	@XmlEnumValue("1928-1")
	_19281("1928-1"),
	@XmlEnumValue("1929-9")
	_19299("1929-9"),
	@XmlEnumValue("1930-7")
	_19307("1930-7"),
	@XmlEnumValue("1931-5")
	_19315("1931-5"),
	@XmlEnumValue("1932-3")
	_19323("1932-3"),
	@XmlEnumValue("1933-1")
	_19331("1933-1"),
	@XmlEnumValue("1934-9")
	_19349("1934-9"),
	@XmlEnumValue("1935-6")
	_19356("1935-6"),
	@XmlEnumValue("1936-4")
	_19364("1936-4"),
	@XmlEnumValue("1937-2")
	_19372("1937-2"),
	@XmlEnumValue("1938-0")
	_19380("1938-0"),
	@XmlEnumValue("1939-8")
	_19398("1939-8"),
	@XmlEnumValue("1940-6")
	_19406("1940-6"),
	@XmlEnumValue("1941-4")
	_19414("1941-4"),
	@XmlEnumValue("1942-2")
	_19422("1942-2"),
	@XmlEnumValue("1943-0")
	_19430("1943-0"),
	@XmlEnumValue("1944-8")
	_19448("1944-8"),
	@XmlEnumValue("1945-5")
	_19455("1945-5"),
	@XmlEnumValue("1946-3")
	_19463("1946-3"),
	@XmlEnumValue("1947-1")
	_19471("1947-1"),
	@XmlEnumValue("1948-9")
	_19489("1948-9"),
	@XmlEnumValue("1949-7")
	_19497("1949-7"),
	@XmlEnumValue("1950-5")
	_19505("1950-5"),
	@XmlEnumValue("1951-3")
	_19513("1951-3"),
	@XmlEnumValue("1952-1")
	_19521("1952-1"),
	@XmlEnumValue("1953-9")
	_19539("1953-9"),
	@XmlEnumValue("1954-7")
	_19547("1954-7"),
	@XmlEnumValue("1955-4")
	_19554("1955-4"),
	@XmlEnumValue("1956-2")
	_19562("1956-2"),
	@XmlEnumValue("1957-0")
	_19570("1957-0"),
	@XmlEnumValue("1958-8")
	_19588("1958-8"),
	@XmlEnumValue("1959-6")
	_19596("1959-6"),
	@XmlEnumValue("1960-4")
	_19604("1960-4"),
	@XmlEnumValue("1961-2")
	_19612("1961-2"),
	@XmlEnumValue("1962-0")
	_19620("1962-0"),
	@XmlEnumValue("1963-8")
	_19638("1963-8"),
	@XmlEnumValue("1964-6")
	_19646("1964-6");
	
	private final String value;

    RaceAlaskanNativeEskimo(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static RaceAlaskanNativeEskimo fromValue(String v) {
        for (RaceAlaskanNativeEskimo c: RaceAlaskanNativeEskimo.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}