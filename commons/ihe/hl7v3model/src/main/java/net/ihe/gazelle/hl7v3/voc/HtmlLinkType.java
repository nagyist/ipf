/**
 * HtmlLinkType.java
 * <p>
 * File generated from the voc::HtmlLinkType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration HtmlLinkType.
 *
 */

@XmlType(name = "HtmlLinkType")
@XmlEnum
@XmlRootElement(name = "HtmlLinkType")
public enum HtmlLinkType {
	@XmlEnumValue("alternate")
	ALTERNATE("alternate"),
	@XmlEnumValue("appendix")
	APPENDIX("appendix"),
	@XmlEnumValue("bookmark")
	BOOKMARK("bookmark"),
	@XmlEnumValue("chapter")
	CHAPTER("chapter"),
	@XmlEnumValue("contents")
	CONTENTS("contents"),
	@XmlEnumValue("copyright")
	COPYRIGHT("copyright"),
	@XmlEnumValue("glossary")
	GLOSSARY("glossary"),
	@XmlEnumValue("help")
	HELP("help"),
	@XmlEnumValue("index")
	INDEX("index"),
	@XmlEnumValue("next")
	NEXT("next"),
	@XmlEnumValue("prev")
	PREV("prev"),
	@XmlEnumValue("section")
	SECTION("section"),
	@XmlEnumValue("start")
	START("start"),
	@XmlEnumValue("stylesheet")
	STYLESHEET("stylesheet"),
	@XmlEnumValue("subsection")
	SUBSECTION("subsection");
	
	private final String value;

    HtmlLinkType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static HtmlLinkType fromValue(String v) {
        for (HtmlLinkType c: HtmlLinkType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}