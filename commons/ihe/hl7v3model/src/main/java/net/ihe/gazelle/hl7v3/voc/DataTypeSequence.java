/**
 * DataTypeSequence.java
 *
 * File generated from the voc::DataTypeSequence uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration DataTypeSequence.
 *
 */

@XmlType(name = "DataTypeSequence")
@XmlEnum
@XmlRootElement(name = "DataTypeSequence")
public enum DataTypeSequence {
	@XmlEnumValue("AD")
	AD("AD"),
	@XmlEnumValue("ADXP")
	ADXP("ADXP"),
	@XmlEnumValue("BIN")
	BIN("BIN"),
	@XmlEnumValue("ED")
	ED("ED"),
	@XmlEnumValue("LIST<ADXP>")
	LISTADXP("LIST<ADXP>"),
	@XmlEnumValue("LIST<ANY>")
	LISTANY("LIST<ANY>"),
	@XmlEnumValue("LIST<BIN>")
	LISTBIN("LIST<BIN>"),
	@XmlEnumValue("LIST<BL>")
	LISTBL("LIST<BL>"),
	@XmlEnumValue("LIST<ED>")
	LISTED("LIST<ED>"),
	@XmlEnumValue("LIST<LIST<ANY>>")
	LISTLISTANY("LIST<LIST<ANY>>"),
	@XmlEnumValue("LIST<LIST<BL>>")
	LISTLISTBL("LIST<LIST<BL>>"),
	@XmlEnumValue("LIST<PNXP>")
	LISTPNXP("LIST<PNXP>"),
	@XmlEnumValue("LIST<ST>")
	LISTST("LIST<ST>"),
	@XmlEnumValue("ON")
	ON("ON"),
	@XmlEnumValue("PN")
	PN("PN"),
	@XmlEnumValue("PNXP")
	PNXP("PNXP"),
	@XmlEnumValue("ST")
	ST("ST");
	
	private final String value;

    DataTypeSequence(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static DataTypeSequence fromValue(String v) {
        for (DataTypeSequence c: DataTypeSequence.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}