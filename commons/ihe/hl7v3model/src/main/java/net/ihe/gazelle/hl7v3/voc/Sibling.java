/**
 * Sibling.java
 *
 * File generated from the voc::Sibling uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration Sibling.
 *
 */

@XmlType(name = "Sibling")
@XmlEnum
@XmlRootElement(name = "Sibling")
public enum Sibling {
	@XmlEnumValue("BRO")
	BRO("BRO"),
	@XmlEnumValue("BROINLAW")
	BROINLAW("BROINLAW"),
	@XmlEnumValue("HBRO")
	HBRO("HBRO"),
	@XmlEnumValue("HSIB")
	HSIB("HSIB"),
	@XmlEnumValue("HSIS")
	HSIS("HSIS"),
	@XmlEnumValue("NBRO")
	NBRO("NBRO"),
	@XmlEnumValue("NSIB")
	NSIB("NSIB"),
	@XmlEnumValue("NSIS")
	NSIS("NSIS"),
	@XmlEnumValue("SIB")
	SIB("SIB"),
	@XmlEnumValue("SIBINLAW")
	SIBINLAW("SIBINLAW"),
	@XmlEnumValue("SIS")
	SIS("SIS"),
	@XmlEnumValue("SISINLAW")
	SISINLAW("SISINLAW"),
	@XmlEnumValue("STPBRO")
	STPBRO("STPBRO"),
	@XmlEnumValue("STPSIB")
	STPSIB("STPSIB"),
	@XmlEnumValue("STPSIS")
	STPSIS("STPSIS");
	
	private final String value;

    Sibling(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static Sibling fromValue(String v) {
        for (Sibling c: Sibling.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}