/**
 * NursePractitionerProviderCodes.java
 *
 * File generated from the voc::NursePractitionerProviderCodes uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration NursePractitionerProviderCodes.
 *
 */

@XmlType(name = "NursePractitionerProviderCodes")
@XmlEnum
@XmlRootElement(name = "NursePractitionerProviderCodes")
public enum NursePractitionerProviderCodes {
	@XmlEnumValue("363A00000X")
	_363A00000X("363A00000X"),
	@XmlEnumValue("363AM0700X")
	_363AM0700X("363AM0700X"),
	@XmlEnumValue("363AS0400X")
	_363AS0400X("363AS0400X"),
	@XmlEnumValue("363L00000X")
	_363L00000X("363L00000X"),
	@XmlEnumValue("363LA2100X")
	_363LA2100X("363LA2100X"),
	@XmlEnumValue("363LA2200X")
	_363LA2200X("363LA2200X"),
	@XmlEnumValue("363LC0200X")
	_363LC0200X("363LC0200X"),
	@XmlEnumValue("363LC1500X")
	_363LC1500X("363LC1500X"),
	@XmlEnumValue("363LF0000X")
	_363LF0000X("363LF0000X"),
	@XmlEnumValue("363LG0600X")
	_363LG0600X("363LG0600X"),
	@XmlEnumValue("363LN0000X")
	_363LN0000X("363LN0000X"),
	@XmlEnumValue("363LN0005X")
	_363LN0005X("363LN0005X"),
	@XmlEnumValue("363LP0200X")
	_363LP0200X("363LP0200X"),
	@XmlEnumValue("363LP0222X")
	_363LP0222X("363LP0222X"),
	@XmlEnumValue("363LP0808X")
	_363LP0808X("363LP0808X"),
	@XmlEnumValue("363LP1700X")
	_363LP1700X("363LP1700X"),
	@XmlEnumValue("363LP2300X")
	_363LP2300X("363LP2300X"),
	@XmlEnumValue("363LS0200X")
	_363LS0200X("363LS0200X"),
	@XmlEnumValue("363LW0102X")
	_363LW0102X("363LW0102X"),
	@XmlEnumValue("363LX0001X")
	_363LX0001X("363LX0001X"),
	@XmlEnumValue("363LX0106X")
	_363LX0106X("363LX0106X");
	
	private final String value;

    NursePractitionerProviderCodes(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static NursePractitionerProviderCodes fromValue(String v) {
        for (NursePractitionerProviderCodes c: NursePractitionerProviderCodes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}