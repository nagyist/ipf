/**
 * SpecimenEntityType.java
 * <p>
 * File generated from the voc::SpecimenEntityType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration SpecimenEntityType.
 *
 */

@XmlType(name = "SpecimenEntityType")
@XmlEnum
@XmlRootElement(name = "SpecimenEntityType")
public enum SpecimenEntityType {
	@XmlEnumValue("ABS")
	ABS("ABS"),
	@XmlEnumValue("AMN")
	AMN("AMN"),
	@XmlEnumValue("ASP")
	ASP("ASP"),
	@XmlEnumValue("BBL")
	BBL("BBL"),
	@XmlEnumValue("BDY")
	BDY("BDY"),
	@XmlEnumValue("BIFL")
	BIFL("BIFL"),
	@XmlEnumValue("BLD")
	BLD("BLD"),
	@XmlEnumValue("BLDA")
	BLDA("BLDA"),
	@XmlEnumValue("BLDC")
	BLDC("BLDC"),
	@XmlEnumValue("BLDCO")
	BLDCO("BLDCO"),
	@XmlEnumValue("BLDV")
	BLDV("BLDV"),
	@XmlEnumValue("BON")
	BON("BON"),
	@XmlEnumValue("BPH")
	BPH("BPH"),
	@XmlEnumValue("BPU")
	BPU("BPU"),
	@XmlEnumValue("BRN")
	BRN("BRN"),
	@XmlEnumValue("BRO")
	BRO("BRO"),
	@XmlEnumValue("BRTH")
	BRTH("BRTH"),
	@XmlEnumValue("CALC")
	CALC("CALC"),
	@XmlEnumValue("CDM")
	CDM("CDM"),
	@XmlEnumValue("CNJT")
	CNJT("CNJT"),
	@XmlEnumValue("CNL")
	CNL("CNL"),
	@XmlEnumValue("COL")
	COL("COL"),
	@XmlEnumValue("CRN")
	CRN("CRN"),
	@XmlEnumValue("CSF")
	CSF("CSF"),
	@XmlEnumValue("CTP")
	CTP("CTP"),
	@XmlEnumValue("CUR")
	CUR("CUR"),
	@XmlEnumValue("CVM")
	CVM("CVM"),
	@XmlEnumValue("CVX")
	CVX("CVX"),
	@XmlEnumValue("CYST")
	CYST("CYST"),
	@XmlEnumValue("DIAF")
	DIAF("DIAF"),
	@XmlEnumValue("DOSE")
	DOSE("DOSE"),
	@XmlEnumValue("DRN")
	DRN("DRN"),
	@XmlEnumValue("DUFL")
	DUFL("DUFL"),
	@XmlEnumValue("EAR")
	EAR("EAR"),
	@XmlEnumValue("EARW")
	EARW("EARW"),
	@XmlEnumValue("ELT")
	ELT("ELT"),
	@XmlEnumValue("ENDC")
	ENDC("ENDC"),
	@XmlEnumValue("ENDM")
	ENDM("ENDM"),
	@XmlEnumValue("EOS")
	EOS("EOS"),
	@XmlEnumValue("EXG")
	EXG("EXG"),
	@XmlEnumValue("EYE")
	EYE("EYE"),
	@XmlEnumValue("FIB")
	FIB("FIB"),
	@XmlEnumValue("FIST")
	FIST("FIST"),
	@XmlEnumValue("FLT")
	FLT("FLT"),
	@XmlEnumValue("FLU")
	FLU("FLU"),
	@XmlEnumValue("FOOD")
	FOOD("FOOD"),
	@XmlEnumValue("GAS")
	GAS("GAS"),
	@XmlEnumValue("GAST")
	GAST("GAST"),
	@XmlEnumValue("GEN")
	GEN("GEN"),
	@XmlEnumValue("GENC")
	GENC("GENC"),
	@XmlEnumValue("GENF")
	GENF("GENF"),
	@XmlEnumValue("GENL")
	GENL("GENL"),
	@XmlEnumValue("GENV")
	GENV("GENV"),
	@XmlEnumValue("HAR")
	HAR("HAR"),
	@XmlEnumValue("IHG")
	IHG("IHG"),
	@XmlEnumValue("ISLT")
	ISLT("ISLT"),
	@XmlEnumValue("IT")
	IT("IT"),
	@XmlEnumValue("LAM")
	LAM("LAM"),
	@XmlEnumValue("LIQ")
	LIQ("LIQ"),
	@XmlEnumValue("LN")
	LN("LN"),
	@XmlEnumValue("LNA")
	LNA("LNA"),
	@XmlEnumValue("LNV")
	LNV("LNV"),
	@XmlEnumValue("LYM")
	LYM("LYM"),
	@XmlEnumValue("MAC")
	MAC("MAC"),
	@XmlEnumValue("MAR")
	MAR("MAR"),
	@XmlEnumValue("MBLD")
	MBLD("MBLD"),
	@XmlEnumValue("MEC")
	MEC("MEC"),
	@XmlEnumValue("MILK")
	MILK("MILK"),
	@XmlEnumValue("MLK")
	MLK("MLK"),
	@XmlEnumValue("NAIL")
	NAIL("NAIL"),
	@XmlEnumValue("NOS")
	NOS("NOS"),
	@XmlEnumValue("PAFL")
	PAFL("PAFL"),
	@XmlEnumValue("PAT")
	PAT("PAT"),
	@XmlEnumValue("PLAS")
	PLAS("PLAS"),
	@XmlEnumValue("PLB")
	PLB("PLB"),
	@XmlEnumValue("PLC")
	PLC("PLC"),
	@XmlEnumValue("PLR")
	PLR("PLR"),
	@XmlEnumValue("PMN")
	PMN("PMN"),
	@XmlEnumValue("PPP")
	PPP("PPP"),
	@XmlEnumValue("PRP")
	PRP("PRP"),
	@XmlEnumValue("PRT")
	PRT("PRT"),
	@XmlEnumValue("PUS")
	PUS("PUS"),
	@XmlEnumValue("RBC")
	RBC("RBC"),
	@XmlEnumValue("SAL")
	SAL("SAL"),
	@XmlEnumValue("SER")
	SER("SER"),
	@XmlEnumValue("SKM")
	SKM("SKM"),
	@XmlEnumValue("SKN")
	SKN("SKN"),
	@XmlEnumValue("SMN")
	SMN("SMN"),
	@XmlEnumValue("SMPLS")
	SMPLS("SMPLS"),
	@XmlEnumValue("SNV")
	SNV("SNV"),
	@XmlEnumValue("SPRM")
	SPRM("SPRM"),
	@XmlEnumValue("SPT")
	SPT("SPT"),
	@XmlEnumValue("SPTC")
	SPTC("SPTC"),
	@XmlEnumValue("SPTT")
	SPTT("SPTT"),
	@XmlEnumValue("STL")
	STL("STL"),
	@XmlEnumValue("STON")
	STON("STON"),
	@XmlEnumValue("SWT")
	SWT("SWT"),
	@XmlEnumValue("TEAR")
	TEAR("TEAR"),
	@XmlEnumValue("THRB")
	THRB("THRB"),
	@XmlEnumValue("THRT")
	THRT("THRT"),
	@XmlEnumValue("TISG")
	TISG("TISG"),
	@XmlEnumValue("TISPL")
	TISPL("TISPL"),
	@XmlEnumValue("TISS")
	TISS("TISS"),
	@XmlEnumValue("TISU")
	TISU("TISU"),
	@XmlEnumValue("TLGI")
	TLGI("TLGI"),
	@XmlEnumValue("TLNG")
	TLNG("TLNG"),
	@XmlEnumValue("TSMI")
	TSMI("TSMI"),
	@XmlEnumValue("TUB")
	TUB("TUB"),
	@XmlEnumValue("ULC")
	ULC("ULC"),
	@XmlEnumValue("UMB")
	UMB("UMB"),
	@XmlEnumValue("UMED")
	UMED("UMED"),
	@XmlEnumValue("UR")
	UR("UR"),
	@XmlEnumValue("URC")
	URC("URC"),
	@XmlEnumValue("URNS")
	URNS("URNS"),
	@XmlEnumValue("URT")
	URT("URT"),
	@XmlEnumValue("URTH")
	URTH("URTH"),
	@XmlEnumValue("USUB")
	USUB("USUB"),
	@XmlEnumValue("VOM")
	VOM("VOM"),
	@XmlEnumValue("WAT")
	WAT("WAT"),
	@XmlEnumValue("WBC")
	WBC("WBC"),
	@XmlEnumValue("WICK")
	WICK("WICK"),
	@XmlEnumValue("WND")
	WND("WND"),
	@XmlEnumValue("WNDA")
	WNDA("WNDA"),
	@XmlEnumValue("WNDD")
	WNDD("WNDD"),
	@XmlEnumValue("WNDE")
	WNDE("WNDE");
	
	private final String value;

    SpecimenEntityType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static SpecimenEntityType fromValue(String v) {
        for (SpecimenEntityType c: SpecimenEntityType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}