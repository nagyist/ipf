/**
 * NursingServiceProvidersProviderCodes.java
 *
 * File generated from the voc::NursingServiceProvidersProviderCodes uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration NursingServiceProvidersProviderCodes.
 *
 */

@XmlType(name = "NursingServiceProvidersProviderCodes")
@XmlEnum
@XmlRootElement(name = "NursingServiceProvidersProviderCodes")
public enum NursingServiceProvidersProviderCodes {
	@XmlEnumValue("160000000X")
	_160000000X("160000000X"),
	@XmlEnumValue("163W00000X")
	_163W00000X("163W00000X"),
	@XmlEnumValue("163WA0400X")
	_163WA0400X("163WA0400X"),
	@XmlEnumValue("163WA2000X")
	_163WA2000X("163WA2000X"),
	@XmlEnumValue("163WC0200X")
	_163WC0200X("163WC0200X"),
	@XmlEnumValue("163WC0400X")
	_163WC0400X("163WC0400X"),
	@XmlEnumValue("163WC1400X")
	_163WC1400X("163WC1400X"),
	@XmlEnumValue("163WC1500X")
	_163WC1500X("163WC1500X"),
	@XmlEnumValue("163WC1600X")
	_163WC1600X("163WC1600X"),
	@XmlEnumValue("163WC2100X")
	_163WC2100X("163WC2100X"),
	@XmlEnumValue("163WC3500X")
	_163WC3500X("163WC3500X"),
	@XmlEnumValue("163WD0400X")
	_163WD0400X("163WD0400X"),
	@XmlEnumValue("163WD1100X")
	_163WD1100X("163WD1100X"),
	@XmlEnumValue("163WE0003X")
	_163WE0003X("163WE0003X"),
	@XmlEnumValue("163WE0900X")
	_163WE0900X("163WE0900X"),
	@XmlEnumValue("163WF0300X")
	_163WF0300X("163WF0300X"),
	@XmlEnumValue("163WG0000X")
	_163WG0000X("163WG0000X"),
	@XmlEnumValue("163WG0100X")
	_163WG0100X("163WG0100X"),
	@XmlEnumValue("163WG0600X")
	_163WG0600X("163WG0600X"),
	@XmlEnumValue("163WH0200X")
	_163WH0200X("163WH0200X"),
	@XmlEnumValue("163WH0500X")
	_163WH0500X("163WH0500X"),
	@XmlEnumValue("163WH1000X")
	_163WH1000X("163WH1000X"),
	@XmlEnumValue("163WI0500X")
	_163WI0500X("163WI0500X"),
	@XmlEnumValue("163WI0600X")
	_163WI0600X("163WI0600X"),
	@XmlEnumValue("163WL0100X")
	_163WL0100X("163WL0100X"),
	@XmlEnumValue("163WM0102X")
	_163WM0102X("163WM0102X"),
	@XmlEnumValue("163WM0705X")
	_163WM0705X("163WM0705X"),
	@XmlEnumValue("163WM1400X")
	_163WM1400X("163WM1400X"),
	@XmlEnumValue("163WN0002X")
	_163WN0002X("163WN0002X"),
	@XmlEnumValue("163WN0003X")
	_163WN0003X("163WN0003X"),
	@XmlEnumValue("163WN0300X")
	_163WN0300X("163WN0300X"),
	@XmlEnumValue("163WN0800X")
	_163WN0800X("163WN0800X"),
	@XmlEnumValue("163WN1003X")
	_163WN1003X("163WN1003X"),
	@XmlEnumValue("163WP0000X")
	_163WP0000X("163WP0000X"),
	@XmlEnumValue("163WP0200X")
	_163WP0200X("163WP0200X"),
	@XmlEnumValue("163WP0218X")
	_163WP0218X("163WP0218X"),
	@XmlEnumValue("163WP0807X")
	_163WP0807X("163WP0807X"),
	@XmlEnumValue("163WP0808X")
	_163WP0808X("163WP0808X"),
	@XmlEnumValue("163WP0809X")
	_163WP0809X("163WP0809X"),
	@XmlEnumValue("163WP1700X")
	_163WP1700X("163WP1700X"),
	@XmlEnumValue("163WP2201X")
	_163WP2201X("163WP2201X"),
	@XmlEnumValue("163WR0400X")
	_163WR0400X("163WR0400X"),
	@XmlEnumValue("163WR1000X")
	_163WR1000X("163WR1000X"),
	@XmlEnumValue("163WS0121X")
	_163WS0121X("163WS0121X"),
	@XmlEnumValue("163WS0200X")
	_163WS0200X("163WS0200X"),
	@XmlEnumValue("163WU0100X")
	_163WU0100X("163WU0100X"),
	@XmlEnumValue("163WW0000X")
	_163WW0000X("163WW0000X"),
	@XmlEnumValue("163WW0101X")
	_163WW0101X("163WW0101X"),
	@XmlEnumValue("163WX0002X")
	_163WX0002X("163WX0002X"),
	@XmlEnumValue("163WX0003X")
	_163WX0003X("163WX0003X"),
	@XmlEnumValue("163WX0106X")
	_163WX0106X("163WX0106X"),
	@XmlEnumValue("163WX0200X")
	_163WX0200X("163WX0200X"),
	@XmlEnumValue("163WX0601X")
	_163WX0601X("163WX0601X"),
	@XmlEnumValue("163WX0800X")
	_163WX0800X("163WX0800X"),
	@XmlEnumValue("163WX1100X")
	_163WX1100X("163WX1100X"),
	@XmlEnumValue("163WX1500X")
	_163WX1500X("163WX1500X"),
	@XmlEnumValue("164W00000X")
	_164W00000X("164W00000X"),
	@XmlEnumValue("164X00000X")
	_164X00000X("164X00000X"),
	@XmlEnumValue("167G00000X")
	_167G00000X("167G00000X");
	
	private final String value;

    NursingServiceProvidersProviderCodes(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static NursingServiceProvidersProviderCodes fromValue(String v) {
        for (NursingServiceProvidersProviderCodes c: NursingServiceProvidersProviderCodes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}