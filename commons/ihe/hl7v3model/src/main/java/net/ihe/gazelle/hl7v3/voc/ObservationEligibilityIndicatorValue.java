/**
 * ObservationEligibilityIndicatorValue.java
 * <p>
 * File generated from the voc::ObservationEligibilityIndicatorValue uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ObservationEligibilityIndicatorValue.
 *
 */

@XmlType(name = "ObservationEligibilityIndicatorValue")
@XmlEnum
@XmlRootElement(name = "ObservationEligibilityIndicatorValue")
public enum ObservationEligibilityIndicatorValue {
	@XmlEnumValue("ADOPT")
	ADOPT("ADOPT"),
	@XmlEnumValue("BTHCERT")
	BTHCERT("BTHCERT"),
	@XmlEnumValue("CCOC")
	CCOC("CCOC"),
	@XmlEnumValue("DRLIC")
	DRLIC("DRLIC"),
	@XmlEnumValue("ELSTAT")
	ELSTAT("ELSTAT"),
	@XmlEnumValue("FOSTER")
	FOSTER("FOSTER"),
	@XmlEnumValue("MEMBER")
	MEMBER("MEMBER"),
	@XmlEnumValue("MIL")
	MIL("MIL"),
	@XmlEnumValue("MRGCERT")
	MRGCERT("MRGCERT"),
	@XmlEnumValue("PASSPORT")
	PASSPORT("PASSPORT"),
	@XmlEnumValue("STUDENRL")
	STUDENRL("STUDENRL");
	
	private final String value;

    ObservationEligibilityIndicatorValue(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ObservationEligibilityIndicatorValue fromValue(String v) {
        for (ObservationEligibilityIndicatorValue c: ObservationEligibilityIndicatorValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}