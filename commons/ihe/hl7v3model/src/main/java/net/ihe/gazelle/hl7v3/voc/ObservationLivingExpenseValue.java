/**
 * ObservationLivingExpenseValue.java
 *
 * File generated from the voc::ObservationLivingExpenseValue uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ObservationLivingExpenseValue.
 *
 */

@XmlType(name = "ObservationLivingExpenseValue")
@XmlEnum
@XmlRootElement(name = "ObservationLivingExpenseValue")
public enum ObservationLivingExpenseValue {
	@XmlEnumValue("CLOTH")
	CLOTH("CLOTH"),
	@XmlEnumValue("FOOD")
	FOOD("FOOD"),
	@XmlEnumValue("HEALTH")
	HEALTH("HEALTH"),
	@XmlEnumValue("HOUSE")
	HOUSE("HOUSE"),
	@XmlEnumValue("LEGAL")
	LEGAL("LEGAL"),
	@XmlEnumValue("LIVEXP")
	LIVEXP("LIVEXP"),
	@XmlEnumValue("MORTG")
	MORTG("MORTG"),
	@XmlEnumValue("RENT")
	RENT("RENT"),
	@XmlEnumValue("SUNDRY")
	SUNDRY("SUNDRY"),
	@XmlEnumValue("TRANS")
	TRANS("TRANS"),
	@XmlEnumValue("UTIL")
	UTIL("UTIL");
	
	private final String value;

    ObservationLivingExpenseValue(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ObservationLivingExpenseValue fromValue(String v) {
        for (ObservationLivingExpenseValue c: ObservationLivingExpenseValue.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}