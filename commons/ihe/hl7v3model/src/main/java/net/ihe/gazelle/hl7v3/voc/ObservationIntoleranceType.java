/**
 * ObservationIntoleranceType.java
 * <p>
 * File generated from the voc::ObservationIntoleranceType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ObservationIntoleranceType.
 *
 */

@XmlType(name = "ObservationIntoleranceType")
@XmlEnum
@XmlRootElement(name = "ObservationIntoleranceType")
public enum ObservationIntoleranceType {
	@XmlEnumValue("ALG")
	ALG("ALG"),
	@XmlEnumValue("DALG")
	DALG("DALG"),
	@XmlEnumValue("DINT")
	DINT("DINT"),
	@XmlEnumValue("DNAINT")
	DNAINT("DNAINT"),
	@XmlEnumValue("EALG")
	EALG("EALG"),
	@XmlEnumValue("EINT")
	EINT("EINT"),
	@XmlEnumValue("ENAINT")
	ENAINT("ENAINT"),
	@XmlEnumValue("FALG")
	FALG("FALG"),
	@XmlEnumValue("FINT")
	FINT("FINT"),
	@XmlEnumValue("FNAINT")
	FNAINT("FNAINT"),
	@XmlEnumValue("NAINT")
	NAINT("NAINT"),
	@XmlEnumValue("OINT")
	OINT("OINT");
	
	private final String value;

    ObservationIntoleranceType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ObservationIntoleranceType fromValue(String v) {
        for (ObservationIntoleranceType c: ObservationIntoleranceType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}