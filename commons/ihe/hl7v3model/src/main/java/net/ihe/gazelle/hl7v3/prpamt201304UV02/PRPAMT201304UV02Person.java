/**
 * PRPAMT201304UV02Person.java
 *
 * File generated from the prpamt201304UV02::PRPAMT201304UV02Person uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.prpamt201304UV02;

import java.util.ArrayList;
import java.util.List;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Marshaller;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.ihe.gazelle.gen.common.ConstraintValidatorModule;

import org.w3c.dom.Document;
import org.w3c.dom.Node;


/**
 * Description of the class PRPAMT201304UV02Person.
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PRPA_MT201304UV02.Person", propOrder = {
	"realmCode",
	"typeId",
	"templateId",
	"id",
	"name",
	"asPatientOfOtherProvider",
	"asEmployee",
	"asCitizen",
	"asStudent",
	"asMember",
	"asOtherIDs",
	"classCode",
	"determinerCode",
	"nullFlavor"
})
@XmlRootElement(name = "PRPA_MT201304UV02.Person")
public class PRPAMT201304UV02Person implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	
	@XmlElement(name = "realmCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode;
	@XmlElement(name = "typeId", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II typeId;
	@XmlElement(name = "templateId", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> templateId;
	@XmlElement(name = "id", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> id;
	@XmlElement(name = "name", required = true, namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.PN> name;
	@XmlElement(name = "asPatientOfOtherProvider", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider> asPatientOfOtherProvider;
	@XmlElement(name = "asEmployee", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee> asEmployee;
	@XmlElement(name = "asCitizen", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen> asCitizen;
	@XmlElement(name = "asStudent", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student> asStudent;
	@XmlElement(name = "asMember", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member> asMember;
	@XmlElement(name = "asOtherIDs", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs> asOtherIDs;
	@XmlAttribute(name = "classCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.EntityClass classCode;
	@XmlAttribute(name = "determinerCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.EntityDeterminer determinerCode;
	@XmlAttribute(name = "nullFlavor")
	public net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor;
	
	/**
	 * An attribute containing marshalled element node
	 */
	@XmlTransient
	private org.w3c.dom.Node _xmlNodePresentation;
	
	
	/**
	 * Return realmCode.
	 * @return realmCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> getRealmCode() {
		if (realmCode == null) {
	        realmCode = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.CS>();
	    }
	    return realmCode;
	}
	
	/**
	 * Set a value to attribute realmCode.
	 * @param realmCode.
	 */
	public void setRealmCode(List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode) {
	    this.realmCode = realmCode;
	}
	
	
	
	/**
	 * Add a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to add.
	 */
	public void addRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.add(realmCode_elt);
	}
	
	/**
	 * Remove a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to remove
	 */
	public void removeRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.remove(realmCode_elt);
	}
	
	/**
	 * Return typeId.
	 * @return typeId
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getTypeId() {
	    return typeId;
	}
	
	/**
	 * Set a value to attribute typeId.
	 * @param typeId.
	 */
	public void setTypeId(net.ihe.gazelle.hl7v3.datatypes.II typeId) {
	    this.typeId = typeId;
	}
	
	
	
	
	/**
	 * Return templateId.
	 * @return templateId
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getTemplateId() {
		if (templateId == null) {
	        templateId = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.II>();
	    }
	    return templateId;
	}
	
	/**
	 * Set a value to attribute templateId.
	 * @param templateId.
	 */
	public void setTemplateId(List<net.ihe.gazelle.hl7v3.datatypes.II> templateId) {
	    this.templateId = templateId;
	}
	
	
	
	/**
	 * Add a templateId to the templateId collection.
	 * @param templateId_elt Element to add.
	 */
	public void addTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.add(templateId_elt);
	}
	
	/**
	 * Remove a templateId to the templateId collection.
	 * @param templateId_elt Element to remove
	 */
	public void removeTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.remove(templateId_elt);
	}
	
	/**
	 * Return id.
	 * @return id
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getId() {
		if (id == null) {
	        id = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.II>();
	    }
	    return id;
	}
	
	/**
	 * Set a value to attribute id.
	 * @param id.
	 */
	public void setId(List<net.ihe.gazelle.hl7v3.datatypes.II> id) {
	    this.id = id;
	}
	
	
	
	/**
	 * Add a id to the id collection.
	 * @param id_elt Element to add.
	 */
	public void addId(net.ihe.gazelle.hl7v3.datatypes.II id_elt) {
	    this.getId().add(id_elt);
	}
	
	/**
	 * Remove a id to the id collection.
	 * @param id_elt Element to remove
	 */
	public void removeId(net.ihe.gazelle.hl7v3.datatypes.II id_elt) {
	    this.getId().remove(id_elt);
	}
	
	/**
	 * Return name.
	 * @return name
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.PN> getName() {
		if (name == null) {
	        name = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.PN>();
	    }
	    return name;
	}
	
	/**
	 * Set a value to attribute name.
	 * @param name.
	 */
	public void setName(List<net.ihe.gazelle.hl7v3.datatypes.PN> name) {
	    this.name = name;
	}
	
	
	
	/**
	 * Add a name to the name collection.
	 * @param name_elt Element to add.
	 */
	public void addName(net.ihe.gazelle.hl7v3.datatypes.PN name_elt) {
	    this.getName().add(name_elt);
	}
	
	/**
	 * Remove a name to the name collection.
	 * @param name_elt Element to remove
	 */
	public void removeName(net.ihe.gazelle.hl7v3.datatypes.PN name_elt) {
	    this.getName().remove(name_elt);
	}
	
	/**
	 * Return asPatientOfOtherProvider.
	 * @return asPatientOfOtherProvider
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider> getAsPatientOfOtherProvider() {
		if (asPatientOfOtherProvider == null) {
	        asPatientOfOtherProvider = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider>();
	    }
	    return asPatientOfOtherProvider;
	}
	
	/**
	 * Set a value to attribute asPatientOfOtherProvider.
	 * @param asPatientOfOtherProvider.
	 */
	public void setAsPatientOfOtherProvider(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider> asPatientOfOtherProvider) {
	    this.asPatientOfOtherProvider = asPatientOfOtherProvider;
	}
	
	
	
	/**
	 * Add a asPatientOfOtherProvider to the asPatientOfOtherProvider collection.
	 * @param asPatientOfOtherProvider_elt Element to add.
	 */
	public void addAsPatientOfOtherProvider(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider asPatientOfOtherProvider_elt) {
	    this.asPatientOfOtherProvider.add(asPatientOfOtherProvider_elt);
	}
	
	/**
	 * Remove a asPatientOfOtherProvider to the asPatientOfOtherProvider collection.
	 * @param asPatientOfOtherProvider_elt Element to remove
	 */
	public void removeAsPatientOfOtherProvider(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider asPatientOfOtherProvider_elt) {
	    this.asPatientOfOtherProvider.remove(asPatientOfOtherProvider_elt);
	}
	
	/**
	 * Return asEmployee.
	 * @return asEmployee
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee> getAsEmployee() {
		if (asEmployee == null) {
	        asEmployee = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee>();
	    }
	    return asEmployee;
	}
	
	/**
	 * Set a value to attribute asEmployee.
	 * @param asEmployee.
	 */
	public void setAsEmployee(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee> asEmployee) {
	    this.asEmployee = asEmployee;
	}
	
	
	
	/**
	 * Add a asEmployee to the asEmployee collection.
	 * @param asEmployee_elt Element to add.
	 */
	public void addAsEmployee(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee asEmployee_elt) {
	    this.asEmployee.add(asEmployee_elt);
	}
	
	/**
	 * Remove a asEmployee to the asEmployee collection.
	 * @param asEmployee_elt Element to remove
	 */
	public void removeAsEmployee(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee asEmployee_elt) {
	    this.asEmployee.remove(asEmployee_elt);
	}
	
	/**
	 * Return asCitizen.
	 * @return asCitizen
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen> getAsCitizen() {
		if (asCitizen == null) {
	        asCitizen = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen>();
	    }
	    return asCitizen;
	}
	
	/**
	 * Set a value to attribute asCitizen.
	 * @param asCitizen.
	 */
	public void setAsCitizen(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen> asCitizen) {
	    this.asCitizen = asCitizen;
	}
	
	
	
	/**
	 * Add a asCitizen to the asCitizen collection.
	 * @param asCitizen_elt Element to add.
	 */
	public void addAsCitizen(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen asCitizen_elt) {
	    this.asCitizen.add(asCitizen_elt);
	}
	
	/**
	 * Remove a asCitizen to the asCitizen collection.
	 * @param asCitizen_elt Element to remove
	 */
	public void removeAsCitizen(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen asCitizen_elt) {
	    this.asCitizen.remove(asCitizen_elt);
	}
	
	/**
	 * Return asStudent.
	 * @return asStudent
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student> getAsStudent() {
		if (asStudent == null) {
	        asStudent = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student>();
	    }
	    return asStudent;
	}
	
	/**
	 * Set a value to attribute asStudent.
	 * @param asStudent.
	 */
	public void setAsStudent(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student> asStudent) {
	    this.asStudent = asStudent;
	}
	
	
	
	/**
	 * Add a asStudent to the asStudent collection.
	 * @param asStudent_elt Element to add.
	 */
	public void addAsStudent(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student asStudent_elt) {
	    this.asStudent.add(asStudent_elt);
	}
	
	/**
	 * Remove a asStudent to the asStudent collection.
	 * @param asStudent_elt Element to remove
	 */
	public void removeAsStudent(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student asStudent_elt) {
	    this.asStudent.remove(asStudent_elt);
	}
	
	/**
	 * Return asMember.
	 * @return asMember
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member> getAsMember() {
		if (asMember == null) {
	        asMember = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member>();
	    }
	    return asMember;
	}
	
	/**
	 * Set a value to attribute asMember.
	 * @param asMember.
	 */
	public void setAsMember(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member> asMember) {
	    this.asMember = asMember;
	}
	
	
	
	/**
	 * Add a asMember to the asMember collection.
	 * @param asMember_elt Element to add.
	 */
	public void addAsMember(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member asMember_elt) {
	    this.asMember.add(asMember_elt);
	}
	
	/**
	 * Remove a asMember to the asMember collection.
	 * @param asMember_elt Element to remove
	 */
	public void removeAsMember(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member asMember_elt) {
	    this.asMember.remove(asMember_elt);
	}
	
	/**
	 * Return asOtherIDs.
	 * @return asOtherIDs
	 */
	public List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs> getAsOtherIDs() {
		if (asOtherIDs == null) {
	        asOtherIDs = new ArrayList<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs>();
	    }
	    return asOtherIDs;
	}
	
	/**
	 * Set a value to attribute asOtherIDs.
	 * @param asOtherIDs.
	 */
	public void setAsOtherIDs(List<net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs> asOtherIDs) {
	    this.asOtherIDs = asOtherIDs;
	}
	
	
	
	/**
	 * Add a asOtherIDs to the asOtherIDs collection.
	 * @param asOtherIDs_elt Element to add.
	 */
	public void addAsOtherIDs(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs asOtherIDs_elt) {
	    this.asOtherIDs.add(asOtherIDs_elt);
	}
	
	/**
	 * Remove a asOtherIDs to the asOtherIDs collection.
	 * @param asOtherIDs_elt Element to remove
	 */
	public void removeAsOtherIDs(net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs asOtherIDs_elt) {
	    this.asOtherIDs.remove(asOtherIDs_elt);
	}
	
	/**
	 * Return classCode.
	 * @return classCode
	 */
	public net.ihe.gazelle.hl7v3.voc.EntityClass getClassCode() {
	    return classCode;
	}
	
	/**
	 * Set a value to attribute classCode.
	 * @param classCode.
	 */
	public void setClassCode(net.ihe.gazelle.hl7v3.voc.EntityClass classCode) {
	    this.classCode = classCode;
	}
	
	
	
	
	/**
	 * Return determinerCode.
	 * @return determinerCode
	 */
	public net.ihe.gazelle.hl7v3.voc.EntityDeterminer getDeterminerCode() {
	    return determinerCode;
	}
	
	/**
	 * Set a value to attribute determinerCode.
	 * @param determinerCode.
	 */
	public void setDeterminerCode(net.ihe.gazelle.hl7v3.voc.EntityDeterminer determinerCode) {
	    this.determinerCode = determinerCode;
	}
	
	
	
	
	/**
	 * Return nullFlavor.
	 * @return nullFlavor
	 */
	public net.ihe.gazelle.hl7v3.voc.NullFlavor getNullFlavor() {
	    return nullFlavor;
	}
	
	/**
	 * Set a value to attribute nullFlavor.
	 * @param nullFlavor.
	 */
	public void setNullFlavor(net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor) {
	    this.nullFlavor = nullFlavor;
	}
	
	
	
	
	
	public Node get_xmlNodePresentation() {
		if (_xmlNodePresentation == null){
				JAXBContext jc;
				DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
				dbf.setNamespaceAware(true);
				DocumentBuilder db = null;
				Document doc = null;
				try {
					db = dbf.newDocumentBuilder();
					doc = db.newDocument();
				} catch (ParserConfigurationException e1) {}
				try {
					jc = JAXBContext.newInstance("net.ihe.gazelle.hl7v3.prpamt201304UV02");
					Marshaller m = jc.createMarshaller();
					m.marshal(this, doc);
					_xmlNodePresentation = doc.getElementsByTagNameNS("urn:hl7-org:v3", "PRPA_MT201304UV02.Person").item(0);
				} catch (JAXBException e) {
					try{
						db = dbf.newDocumentBuilder();
						_xmlNodePresentation = db.newDocument();
					}
					catch(Exception ee){}
				}
			}
			return _xmlNodePresentation;
	}
	
	public void set_xmlNodePresentation(Node _xmlNodePresentation) {
		this._xmlNodePresentation = _xmlNodePresentation;
	}
	
	
	

	
	/**
     * validate by a module of validation
     * 
     */
   public static void validateByModule(PRPAMT201304UV02Person pRPAMT201304UV02Person, String _location, ConstraintValidatorModule cvm, List<net.ihe.gazelle.validation.Notification> diagnostic){
   		if (pRPAMT201304UV02Person != null){
   			cvm.validate(pRPAMT201304UV02Person, _location, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CS realmCode: pRPAMT201304UV02Person.getRealmCode()){
					net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(realmCode, _location + "/realmCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(pRPAMT201304UV02Person.getTypeId(), _location + "/typeId", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II templateId: pRPAMT201304UV02Person.getTemplateId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(templateId, _location + "/templateId[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II id: pRPAMT201304UV02Person.getId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(id, _location + "/id[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.PN name: pRPAMT201304UV02Person.getName()){
					net.ihe.gazelle.hl7v3.datatypes.PN.validateByModule(name, _location + "/name[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider asPatientOfOtherProvider: pRPAMT201304UV02Person.getAsPatientOfOtherProvider()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02PatientOfOtherProvider.validateByModule(asPatientOfOtherProvider, _location + "/asPatientOfOtherProvider[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee asEmployee: pRPAMT201304UV02Person.getAsEmployee()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Employee.validateByModule(asEmployee, _location + "/asEmployee[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen asCitizen: pRPAMT201304UV02Person.getAsCitizen()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Citizen.validateByModule(asCitizen, _location + "/asCitizen[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student asStudent: pRPAMT201304UV02Person.getAsStudent()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Student.validateByModule(asStudent, _location + "/asStudent[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member asMember: pRPAMT201304UV02Person.getAsMember()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02Member.validateByModule(asMember, _location + "/asMember[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs asOtherIDs: pRPAMT201304UV02Person.getAsOtherIDs()){
					net.ihe.gazelle.hl7v3.prpamt201304UV02.PRPAMT201304UV02OtherIDs.validateByModule(asOtherIDs, _location + "/asOtherIDs[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
    	}
    }

}