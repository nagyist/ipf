/**
 * Inhalation.java
 *
 * File generated from the voc::Inhalation uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration Inhalation.
 *
 */

@XmlType(name = "Inhalation")
@XmlEnum
@XmlRootElement(name = "Inhalation")
public enum Inhalation {
	@XmlEnumValue("IPPB")
	IPPB("IPPB"),
	@XmlEnumValue("NASINHL")
	NASINHL("NASINHL"),
	@XmlEnumValue("NASINHLC")
	NASINHLC("NASINHLC"),
	@XmlEnumValue("NASNEB")
	NASNEB("NASNEB"),
	@XmlEnumValue("NEB")
	NEB("NEB"),
	@XmlEnumValue("NP")
	NP("NP"),
	@XmlEnumValue("ORIFINHL")
	ORIFINHL("ORIFINHL"),
	@XmlEnumValue("ORINHL")
	ORINHL("ORINHL"),
	@XmlEnumValue("ORNEB")
	ORNEB("ORNEB"),
	@XmlEnumValue("REBREATH")
	REBREATH("REBREATH"),
	@XmlEnumValue("TRACH")
	TRACH("TRACH"),
	@XmlEnumValue("VENT")
	VENT("VENT"),
	@XmlEnumValue("VENTMASK")
	VENTMASK("VENTMASK");
	
	private final String value;

    Inhalation(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static Inhalation fromValue(String v) {
        for (Inhalation c: Inhalation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}