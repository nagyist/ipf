/**
 * Parent.java
 * <p>
 * File generated from the voc::Parent uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration Parent.
 *
 */

@XmlType(name = "Parent")
@XmlEnum
@XmlRootElement(name = "Parent")
public enum Parent {
	@XmlEnumValue("FTH")
	FTH("FTH"),
	@XmlEnumValue("FTHINLAW")
	FTHINLAW("FTHINLAW"),
	@XmlEnumValue("MTH")
	MTH("MTH"),
	@XmlEnumValue("MTHINLAW")
	MTHINLAW("MTHINLAW"),
	@XmlEnumValue("NFTH")
	NFTH("NFTH"),
	@XmlEnumValue("NFTHF")
	NFTHF("NFTHF"),
	@XmlEnumValue("NMTH")
	NMTH("NMTH"),
	@XmlEnumValue("NPRN")
	NPRN("NPRN"),
	@XmlEnumValue("PRN")
	PRN("PRN"),
	@XmlEnumValue("PRNINLAW")
	PRNINLAW("PRNINLAW"),
	@XmlEnumValue("STPFTH")
	STPFTH("STPFTH"),
	@XmlEnumValue("STPMTH")
	STPMTH("STPMTH"),
	@XmlEnumValue("STPPRN")
	STPPRN("STPPRN");
	
	private final String value;

    Parent(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static Parent fromValue(String v) {
        for (Parent c: Parent.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}