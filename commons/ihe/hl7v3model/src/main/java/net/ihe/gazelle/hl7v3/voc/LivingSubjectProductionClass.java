/**
 * LivingSubjectProductionClass.java
 *
 * File generated from the voc::LivingSubjectProductionClass uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration LivingSubjectProductionClass.
 *
 */

@XmlType(name = "LivingSubjectProductionClass")
@XmlEnum
@XmlRootElement(name = "LivingSubjectProductionClass")
public enum LivingSubjectProductionClass {
	@XmlEnumValue("BF")
	BF("BF"),
	@XmlEnumValue("BL")
	BL("BL"),
	@XmlEnumValue("BR")
	BR("BR"),
	@XmlEnumValue("CO")
	CO("CO"),
	@XmlEnumValue("DA")
	DA("DA"),
	@XmlEnumValue("DR")
	DR("DR"),
	@XmlEnumValue("DU")
	DU("DU"),
	@XmlEnumValue("FI")
	FI("FI"),
	@XmlEnumValue("LY")
	LY("LY"),
	@XmlEnumValue("MT")
	MT("MT"),
	@XmlEnumValue("MU")
	MU("MU"),
	@XmlEnumValue("PL")
	PL("PL"),
	@XmlEnumValue("RC")
	RC("RC"),
	@XmlEnumValue("SH")
	SH("SH"),
	@XmlEnumValue("VL")
	VL("VL"),
	@XmlEnumValue("WL")
	WL("WL"),
	@XmlEnumValue("WO")
	WO("WO");
	
	private final String value;

    LivingSubjectProductionClass(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static LivingSubjectProductionClass fromValue(String v) {
        for (LivingSubjectProductionClass c: LivingSubjectProductionClass.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}