/**
 * COCTMT510000UV06Benefit.java
 * <p>
 * File generated from the coctmt510000UV06::COCTMT510000UV06Benefit uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.coctmt510000UV06;

import java.io.Serial;
import java.util.ArrayList;
import java.util.List;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Marshaller;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.ihe.gazelle.gen.common.ConstraintValidatorModule;

import org.w3c.dom.Document;
import org.w3c.dom.Node;


/**
 * Description of the class COCTMT510000UV06Benefit.
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "COCT_MT510000UV06.Benefit", propOrder = {
	"realmCode",
	"typeId",
	"templateId",
	"id",
	"code",
	"effectiveTime",
	"confidentialityCode",
	"reasonCode",
	"definition",
	"precondition",
	"reference",
	"limitation",
	"classCode",
	"moodCode",
	"negationInd",
	"nullFlavor"
})
@XmlRootElement(name = "COCT_MT510000UV06.Benefit")
public class COCTMT510000UV06Benefit implements java.io.Serializable {
	
	/**
	 * 
	 */
	@Serial
    private static final long serialVersionUID = 1L;

	
	@XmlElement(name = "realmCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode;
	@XmlElement(name = "typeId", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II typeId;
	@XmlElement(name = "templateId", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> templateId;
	@XmlElement(name = "id", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> id;
	@XmlElement(name = "code", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CD code;
	@XmlElement(name = "effectiveTime", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS effectiveTime;
	@XmlElement(name = "confidentialityCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CE> confidentialityCode;
	@XmlElement(name = "reasonCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CE> reasonCode;
	@XmlElement(name = "definition", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition> definition;
	@XmlElement(name = "precondition", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition> precondition;
	@XmlElement(name = "reference", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference> reference;
	@XmlElement(name = "limitation", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2> limitation;
	@XmlAttribute(name = "classCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.ActClassCareProvision classCode;
	@XmlAttribute(name = "moodCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.ActMoodCompletionTrack moodCode;
	@XmlAttribute(name = "negationInd")
	public Boolean negationInd;
	@XmlAttribute(name = "nullFlavor")
	public net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor;
	
	/**
	 * An attribute containing marshalled element node
	 */
	@XmlTransient
	private org.w3c.dom.Node _xmlNodePresentation;
	
	
	/**
	 * Return realmCode.
	 * @return realmCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> getRealmCode() {
		if (realmCode == null) {
	        realmCode = new ArrayList<>();
	    }
	    return realmCode;
	}
	
	/**
	 * Set a value to attribute realmCode.
     */
	public void setRealmCode(List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode) {
	    this.realmCode = realmCode;
	}
	
	
	
	/**
	 * Add a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to add.
	 */
	public void addRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.add(realmCode_elt);
	}
	
	/**
	 * Remove a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to remove
	 */
	public void removeRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.remove(realmCode_elt);
	}
	
	/**
	 * Return typeId.
	 * @return typeId
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getTypeId() {
	    return typeId;
	}
	
	/**
	 * Set a value to attribute typeId.
     */
	public void setTypeId(net.ihe.gazelle.hl7v3.datatypes.II typeId) {
	    this.typeId = typeId;
	}
	
	
	
	
	/**
	 * Return templateId.
	 * @return templateId
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getTemplateId() {
		if (templateId == null) {
	        templateId = new ArrayList<>();
	    }
	    return templateId;
	}
	
	/**
	 * Set a value to attribute templateId.
     */
	public void setTemplateId(List<net.ihe.gazelle.hl7v3.datatypes.II> templateId) {
	    this.templateId = templateId;
	}
	
	
	
	/**
	 * Add a templateId to the templateId collection.
	 * @param templateId_elt Element to add.
	 */
	public void addTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.add(templateId_elt);
	}
	
	/**
	 * Remove a templateId to the templateId collection.
	 * @param templateId_elt Element to remove
	 */
	public void removeTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.remove(templateId_elt);
	}
	
	/**
	 * Return id.
	 * @return id
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getId() {
		if (id == null) {
	        id = new ArrayList<>();
	    }
	    return id;
	}
	
	/**
	 * Set a value to attribute id.
     */
	public void setId(List<net.ihe.gazelle.hl7v3.datatypes.II> id) {
	    this.id = id;
	}
	
	
	
	/**
	 * Add a id to the id collection.
	 * @param id_elt Element to add.
	 */
	public void addId(net.ihe.gazelle.hl7v3.datatypes.II id_elt) {
	    this.id.add(id_elt);
	}
	
	/**
	 * Remove a id to the id collection.
	 * @param id_elt Element to remove
	 */
	public void removeId(net.ihe.gazelle.hl7v3.datatypes.II id_elt) {
	    this.id.remove(id_elt);
	}
	
	/**
	 * Return code.
	 * @return code
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CD getCode() {
	    return code;
	}
	
	/**
	 * Set a value to attribute code.
     */
	public void setCode(net.ihe.gazelle.hl7v3.datatypes.CD code) {
	    this.code = code;
	}
	
	
	
	
	/**
	 * Return effectiveTime.
	 * @return effectiveTime
	 */
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS getEffectiveTime() {
	    return effectiveTime;
	}
	
	/**
	 * Set a value to attribute effectiveTime.
     */
	public void setEffectiveTime(net.ihe.gazelle.hl7v3.datatypes.IVLTS effectiveTime) {
	    this.effectiveTime = effectiveTime;
	}
	
	
	
	
	/**
	 * Return confidentialityCode.
	 * @return confidentialityCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CE> getConfidentialityCode() {
		if (confidentialityCode == null) {
	        confidentialityCode = new ArrayList<>();
	    }
	    return confidentialityCode;
	}
	
	/**
	 * Set a value to attribute confidentialityCode.
     */
	public void setConfidentialityCode(List<net.ihe.gazelle.hl7v3.datatypes.CE> confidentialityCode) {
	    this.confidentialityCode = confidentialityCode;
	}
	
	
	
	/**
	 * Add a confidentialityCode to the confidentialityCode collection.
	 * @param confidentialityCode_elt Element to add.
	 */
	public void addConfidentialityCode(net.ihe.gazelle.hl7v3.datatypes.CE confidentialityCode_elt) {
	    this.confidentialityCode.add(confidentialityCode_elt);
	}
	
	/**
	 * Remove a confidentialityCode to the confidentialityCode collection.
	 * @param confidentialityCode_elt Element to remove
	 */
	public void removeConfidentialityCode(net.ihe.gazelle.hl7v3.datatypes.CE confidentialityCode_elt) {
	    this.confidentialityCode.remove(confidentialityCode_elt);
	}
	
	/**
	 * Return reasonCode.
	 * @return reasonCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CE> getReasonCode() {
		if (reasonCode == null) {
	        reasonCode = new ArrayList<>();
	    }
	    return reasonCode;
	}
	
	/**
	 * Set a value to attribute reasonCode.
     */
	public void setReasonCode(List<net.ihe.gazelle.hl7v3.datatypes.CE> reasonCode) {
	    this.reasonCode = reasonCode;
	}
	
	
	
	/**
	 * Add a reasonCode to the reasonCode collection.
	 * @param reasonCode_elt Element to add.
	 */
	public void addReasonCode(net.ihe.gazelle.hl7v3.datatypes.CE reasonCode_elt) {
	    this.reasonCode.add(reasonCode_elt);
	}
	
	/**
	 * Remove a reasonCode to the reasonCode collection.
	 * @param reasonCode_elt Element to remove
	 */
	public void removeReasonCode(net.ihe.gazelle.hl7v3.datatypes.CE reasonCode_elt) {
	    this.reasonCode.remove(reasonCode_elt);
	}
	
	/**
	 * Return definition.
	 * @return definition
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition> getDefinition() {
		if (definition == null) {
	        definition = new ArrayList<>();
	    }
	    return definition;
	}
	
	/**
	 * Set a value to attribute definition.
     */
	public void setDefinition(List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition> definition) {
	    this.definition = definition;
	}
	
	
	
	/**
	 * Add a definition to the definition collection.
	 * @param definition_elt Element to add.
	 */
	public void addDefinition(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition definition_elt) {
	    this.definition.add(definition_elt);
	}
	
	/**
	 * Remove a definition to the definition collection.
	 * @param definition_elt Element to remove
	 */
	public void removeDefinition(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition definition_elt) {
	    this.definition.remove(definition_elt);
	}
	
	/**
	 * Return precondition.
	 * @return precondition
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition> getPrecondition() {
		if (precondition == null) {
	        precondition = new ArrayList<>();
	    }
	    return precondition;
	}
	
	/**
	 * Set a value to attribute precondition.
     */
	public void setPrecondition(List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition> precondition) {
	    this.precondition = precondition;
	}
	
	
	
	/**
	 * Add a precondition to the precondition collection.
	 * @param precondition_elt Element to add.
	 */
	public void addPrecondition(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition precondition_elt) {
	    this.precondition.add(precondition_elt);
	}
	
	/**
	 * Remove a precondition to the precondition collection.
	 * @param precondition_elt Element to remove
	 */
	public void removePrecondition(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition precondition_elt) {
	    this.precondition.remove(precondition_elt);
	}
	
	/**
	 * Return reference.
	 * @return reference
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference> getReference() {
		if (reference == null) {
	        reference = new ArrayList<>();
	    }
	    return reference;
	}
	
	/**
	 * Set a value to attribute reference.
     */
	public void setReference(List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference> reference) {
	    this.reference = reference;
	}
	
	
	
	/**
	 * Add a reference to the reference collection.
	 * @param reference_elt Element to add.
	 */
	public void addReference(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference reference_elt) {
	    this.reference.add(reference_elt);
	}
	
	/**
	 * Remove a reference to the reference collection.
	 * @param reference_elt Element to remove
	 */
	public void removeReference(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference reference_elt) {
	    this.reference.remove(reference_elt);
	}
	
	/**
	 * Return limitation.
	 * @return limitation
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2> getLimitation() {
		if (limitation == null) {
	        limitation = new ArrayList<>();
	    }
	    return limitation;
	}
	
	/**
	 * Set a value to attribute limitation.
     */
	public void setLimitation(List<net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2> limitation) {
	    this.limitation = limitation;
	}
	
	
	
	/**
	 * Add a limitation to the limitation collection.
	 * @param limitation_elt Element to add.
	 */
	public void addLimitation(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2 limitation_elt) {
	    this.limitation.add(limitation_elt);
	}
	
	/**
	 * Remove a limitation to the limitation collection.
	 * @param limitation_elt Element to remove
	 */
	public void removeLimitation(net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2 limitation_elt) {
	    this.limitation.remove(limitation_elt);
	}
	
	/**
	 * Return classCode.
	 * @return classCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ActClassCareProvision getClassCode() {
	    return classCode;
	}
	
	/**
	 * Set a value to attribute classCode.
     */
	public void setClassCode(net.ihe.gazelle.hl7v3.voc.ActClassCareProvision classCode) {
	    this.classCode = classCode;
	}
	
	
	
	
	/**
	 * Return moodCode.
	 * @return moodCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ActMoodCompletionTrack getMoodCode() {
	    return moodCode;
	}
	
	/**
	 * Set a value to attribute moodCode.
     */
	public void setMoodCode(net.ihe.gazelle.hl7v3.voc.ActMoodCompletionTrack moodCode) {
	    this.moodCode = moodCode;
	}
	
	
	
	
	/**
	 * Return negationInd.
	 * @return negationInd
	 */
	public Boolean getNegationInd() {
	    return negationInd;
	}
	
	/**
	 * Set a value to attribute negationInd.
     */
	public void setNegationInd(Boolean negationInd) {
	    this.negationInd = negationInd;
	}
	
	
	/**
	 * Return negationInd.
	 * @return negationInd
	 * Generated for the use on jsf pages
	 */
	 @Deprecated
	public Boolean isNegationInd() {
	    return negationInd;
	}
	
	/**
	 * Return nullFlavor.
	 * @return nullFlavor
	 */
	public net.ihe.gazelle.hl7v3.voc.NullFlavor getNullFlavor() {
	    return nullFlavor;
	}
	
	/**
	 * Set a value to attribute nullFlavor.
     */
	public void setNullFlavor(net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor) {
	    this.nullFlavor = nullFlavor;
	}
	
	
	
	
	
	public Node get_xmlNodePresentation() {
		if (_xmlNodePresentation == null){
				JAXBContext jc;
				DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
				dbf.setNamespaceAware(true);
				DocumentBuilder db = null;
				Document doc = null;
				try {
					db = dbf.newDocumentBuilder();
					doc = db.newDocument();
				} catch (ParserConfigurationException ignored) {}
				try {
					jc = JAXBContext.newInstance("net.ihe.gazelle.hl7v3.coctmt510000UV06");
					Marshaller m = jc.createMarshaller();
					m.marshal(this, doc);
					_xmlNodePresentation = doc.getElementsByTagNameNS("urn:hl7-org:v3", "COCT_MT510000UV06.Benefit").item(0);
				} catch (JAXBException e) {
					try{
						db = dbf.newDocumentBuilder();
						_xmlNodePresentation = db.newDocument();
					}
					catch(Exception ignored){}
				}
			}
			return _xmlNodePresentation;
	}
	
	public void set_xmlNodePresentation(Node _xmlNodePresentation) {
		this._xmlNodePresentation = _xmlNodePresentation;
	}
	
	
	

	
	/**
     * validate by a module of validation
     * 
     */
   public static void validateByModule(COCTMT510000UV06Benefit cOCTMT510000UV06Benefit, String _location, ConstraintValidatorModule cvm, List<net.ihe.gazelle.validation.Notification> diagnostic){
   		if (cOCTMT510000UV06Benefit != null){
   			cvm.validate(cOCTMT510000UV06Benefit, _location, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CS realmCode: cOCTMT510000UV06Benefit.getRealmCode()){
					net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(realmCode, _location + "/realmCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(cOCTMT510000UV06Benefit.getTypeId(), _location + "/typeId", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II templateId: cOCTMT510000UV06Benefit.getTemplateId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(templateId, _location + "/templateId[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II id: cOCTMT510000UV06Benefit.getId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(id, _location + "/id[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.CD.validateByModule(cOCTMT510000UV06Benefit.getCode(), _location + "/code", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.IVLTS.validateByModule(cOCTMT510000UV06Benefit.getEffectiveTime(), _location + "/effectiveTime", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CE confidentialityCode: cOCTMT510000UV06Benefit.getConfidentialityCode()){
					net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(confidentialityCode, _location + "/confidentialityCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CE reasonCode: cOCTMT510000UV06Benefit.getReasonCode()){
					net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(reasonCode, _location + "/reasonCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition definition: cOCTMT510000UV06Benefit.getDefinition()){
					net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Definition.validateByModule(definition, _location + "/definition[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition precondition: cOCTMT510000UV06Benefit.getPrecondition()){
					net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Precondition.validateByModule(precondition, _location + "/precondition[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference reference: cOCTMT510000UV06Benefit.getReference()){
					net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Reference.validateByModule(reference, _location + "/reference[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2 limitation: cOCTMT510000UV06Benefit.getLimitation()){
					net.ihe.gazelle.hl7v3.coctmt510000UV06.COCTMT510000UV06Limitation2.validateByModule(limitation, _location + "/limitation[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
    	}
    }

}