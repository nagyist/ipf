/**
 * ConditionDetectedIssueCode.java
 *
 * File generated from the voc::ConditionDetectedIssueCode uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ConditionDetectedIssueCode.
 *
 */

@XmlType(name = "ConditionDetectedIssueCode")
@XmlEnum
@XmlRootElement(name = "ConditionDetectedIssueCode")
public enum ConditionDetectedIssueCode {
	@XmlEnumValue("COND")
	COND("COND"),
	@XmlEnumValue("DOSEHINDSA")
	DOSEHINDSA("DOSEHINDSA"),
	@XmlEnumValue("DOSEHINDW")
	DOSEHINDW("DOSEHINDW"),
	@XmlEnumValue("DOSELINDSA")
	DOSELINDSA("DOSELINDSA"),
	@XmlEnumValue("DOSELINDW")
	DOSELINDW("DOSELINDW"),
	@XmlEnumValue("LACT")
	LACT("LACT"),
	@XmlEnumValue("PREG")
	PREG("PREG");
	
	private final String value;

    ConditionDetectedIssueCode(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ConditionDetectedIssueCode fromValue(String v) {
        for (ConditionDetectedIssueCode c: ConditionDetectedIssueCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}