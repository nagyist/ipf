/**
 * NursePractitionerHIPAA.java
 * <p>
 * File generated from the voc::NursePractitionerHIPAA uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration NursePractitionerHIPAA.
 *
 */

@XmlType(name = "NursePractitionerHIPAA")
@XmlEnum
@XmlRootElement(name = "NursePractitionerHIPAA")
public enum NursePractitionerHIPAA {
	@XmlEnumValue("363L00000N")
	_363L00000N("363L00000N"),
	@XmlEnumValue("363LA2100N")
	_363LA2100N("363LA2100N"),
	@XmlEnumValue("363LA2200N")
	_363LA2200N("363LA2200N"),
	@XmlEnumValue("363LC0200N")
	_363LC0200N("363LC0200N"),
	@XmlEnumValue("363LC1500N")
	_363LC1500N("363LC1500N"),
	@XmlEnumValue("363LF0000N")
	_363LF0000N("363LF0000N"),
	@XmlEnumValue("363LG0600N")
	_363LG0600N("363LG0600N"),
	@XmlEnumValue("363LN0000N")
	_363LN0000N("363LN0000N"),
	@XmlEnumValue("363LN0005N")
	_363LN0005N("363LN0005N"),
	@XmlEnumValue("363LP0200N")
	_363LP0200N("363LP0200N"),
	@XmlEnumValue("363LP0222N")
	_363LP0222N("363LP0222N"),
	@XmlEnumValue("363LP0223N")
	_363LP0223N("363LP0223N"),
	@XmlEnumValue("363LP0808N")
	_363LP0808N("363LP0808N"),
	@XmlEnumValue("363LP1700N")
	_363LP1700N("363LP1700N"),
	@XmlEnumValue("363LP2300N")
	_363LP2300N("363LP2300N"),
	@XmlEnumValue("363LS0200N")
	_363LS0200N("363LS0200N"),
	@XmlEnumValue("363LW0102N")
	_363LW0102N("363LW0102N"),
	@XmlEnumValue("363LX0001N")
	_363LX0001N("363LX0001N"),
	@XmlEnumValue("363LX0106N")
	_363LX0106N("363LX0106N");
	
	private final String value;

    NursePractitionerHIPAA(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static NursePractitionerHIPAA fromValue(String v) {
        for (NursePractitionerHIPAA c: NursePractitionerHIPAA.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}