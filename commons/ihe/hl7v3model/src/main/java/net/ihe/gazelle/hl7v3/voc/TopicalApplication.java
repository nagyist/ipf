/**
 * TopicalApplication.java
 * <p>
 * File generated from the voc::TopicalApplication uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration TopicalApplication.
 *
 */

@XmlType(name = "TopicalApplication")
@XmlEnum
@XmlRootElement(name = "TopicalApplication")
public enum TopicalApplication {
	@XmlEnumValue("BUC")
	BUC("BUC"),
	@XmlEnumValue("CERV")
	CERV("CERV"),
	@XmlEnumValue("DEN")
	DEN("DEN"),
	@XmlEnumValue("DRESS")
	DRESS("DRESS"),
	@XmlEnumValue("GIN")
	GIN("GIN"),
	@XmlEnumValue("HAIR")
	HAIR("HAIR"),
	@XmlEnumValue("ICORNTA")
	ICORNTA("ICORNTA"),
	@XmlEnumValue("ICORONTA")
	ICORONTA("ICORONTA"),
	@XmlEnumValue("IESOPHTA")
	IESOPHTA("IESOPHTA"),
	@XmlEnumValue("IILEALTA")
	IILEALTA("IILEALTA"),
	@XmlEnumValue("ILTOP")
	ILTOP("ILTOP"),
	@XmlEnumValue("ILUMTA")
	ILUMTA("ILUMTA"),
	@XmlEnumValue("IONTO")
	IONTO("IONTO"),
	@XmlEnumValue("IOTOP")
	IOTOP("IOTOP"),
	@XmlEnumValue("LARYNGTA")
	LARYNGTA("LARYNGTA"),
	@XmlEnumValue("MUC")
	MUC("MUC"),
	@XmlEnumValue("NAIL")
	NAIL("NAIL"),
	@XmlEnumValue("NASAL")
	NASAL("NASAL"),
	@XmlEnumValue("OCDRESTA")
	OCDRESTA("OCDRESTA"),
	@XmlEnumValue("OPTHALTA")
	OPTHALTA("OPTHALTA"),
	@XmlEnumValue("ORALTA")
	ORALTA("ORALTA"),
	@XmlEnumValue("ORMUC")
	ORMUC("ORMUC"),
	@XmlEnumValue("OROPHARTA")
	OROPHARTA("OROPHARTA"),
	@XmlEnumValue("PDONTTA")
	PDONTTA("PDONTTA"),
	@XmlEnumValue("PERIANAL")
	PERIANAL("PERIANAL"),
	@XmlEnumValue("PERINEAL")
	PERINEAL("PERINEAL"),
	@XmlEnumValue("RECTAL")
	RECTAL("RECTAL"),
	@XmlEnumValue("SCALP")
	SCALP("SCALP"),
	@XmlEnumValue("SKIN")
	SKIN("SKIN"),
	@XmlEnumValue("SUBCONJTA")
	SUBCONJTA("SUBCONJTA"),
	@XmlEnumValue("SWAB")
	SWAB("SWAB"),
	@XmlEnumValue("TMUCTA")
	TMUCTA("TMUCTA"),
	@XmlEnumValue("TOPICAL")
	TOPICAL("TOPICAL"),
	@XmlEnumValue("VAGINS")
	VAGINS("VAGINS");
	
	private final String value;

    TopicalApplication(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static TopicalApplication fromValue(String v) {
        for (TopicalApplication c: TopicalApplication.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}