/**
 * MultiUseContainerEntityType.java
 * <p>
 * File generated from the voc::MultiUseContainerEntityType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration MultiUseContainerEntityType.
 *
 */

@XmlType(name = "MultiUseContainerEntityType")
@XmlEnum
@XmlRootElement(name = "MultiUseContainerEntityType")
public enum MultiUseContainerEntityType {
	@XmlEnumValue("BOT")
	BOT("BOT"),
	@XmlEnumValue("BOTA")
	BOTA("BOTA"),
	@XmlEnumValue("BOTD")
	BOTD("BOTD"),
	@XmlEnumValue("BOTG")
	BOTG("BOTG"),
	@XmlEnumValue("BOTP")
	BOTP("BOTP"),
	@XmlEnumValue("BOTPLY")
	BOTPLY("BOTPLY"),
	@XmlEnumValue("BOX")
	BOX("BOX"),
	@XmlEnumValue("CAN")
	CAN("CAN"),
	@XmlEnumValue("CART")
	CART("CART"),
	@XmlEnumValue("CNSTR")
	CNSTR("CNSTR"),
	@XmlEnumValue("JAR")
	JAR("JAR"),
	@XmlEnumValue("JUG")
	JUG("JUG"),
	@XmlEnumValue("TIN")
	TIN("TIN"),
	@XmlEnumValue("TUB")
	TUB("TUB"),
	@XmlEnumValue("TUBE")
	TUBE("TUBE"),
	@XmlEnumValue("VIAL")
	VIAL("VIAL");
	
	private final String value;

    MultiUseContainerEntityType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static MultiUseContainerEntityType fromValue(String v) {
        for (MultiUseContainerEntityType c: MultiUseContainerEntityType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}