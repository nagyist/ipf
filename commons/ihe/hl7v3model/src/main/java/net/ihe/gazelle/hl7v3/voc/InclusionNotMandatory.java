/**
 * InclusionNotMandatory.java
 *
 * File generated from the voc::InclusionNotMandatory uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration InclusionNotMandatory.
 *
 */

@XmlType(name = "InclusionNotMandatory")
@XmlEnum
@XmlRootElement(name = "InclusionNotMandatory")
public enum InclusionNotMandatory {
	@XmlEnumValue("NP")
	NP("NP"),
	@XmlEnumValue("NR")
	NR("NR"),
	@XmlEnumValue("RE")
	RE("RE"),
	@XmlEnumValue("RQ")
	RQ("RQ"),
	@XmlEnumValue("X")
	X("X");
	
	private final String value;

    InclusionNotMandatory(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static InclusionNotMandatory fromValue(String v) {
        for (InclusionNotMandatory c: InclusionNotMandatory.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}