/**
 * AssignedNonPersonLivingSubjectRoleType.java
 *
 * File generated from the voc::AssignedNonPersonLivingSubjectRoleType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration AssignedNonPersonLivingSubjectRoleType.
 *
 */

@XmlType(name = "AssignedNonPersonLivingSubjectRoleType")
@XmlEnum
@XmlRootElement(name = "AssignedNonPersonLivingSubjectRoleType")
public enum AssignedNonPersonLivingSubjectRoleType {
	@XmlEnumValue("ANTIBIOT")
	ANTIBIOT("ANTIBIOT"),
	@XmlEnumValue("ASSIST")
	ASSIST("ASSIST"),
	@XmlEnumValue("BIOTH")
	BIOTH("BIOTH"),
	@XmlEnumValue("CCO")
	CCO("CCO"),
	@XmlEnumValue("DEBR")
	DEBR("DEBR"),
	@XmlEnumValue("SEE")
	SEE("SEE"),
	@XmlEnumValue("SNIFF")
	SNIFF("SNIFF");
	
	private final String value;

    AssignedNonPersonLivingSubjectRoleType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static AssignedNonPersonLivingSubjectRoleType fromValue(String v) {
        for (AssignedNonPersonLivingSubjectRoleType c: AssignedNonPersonLivingSubjectRoleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}