/**
 * LivingArrangement.java
 *
 * File generated from the voc::LivingArrangement uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration LivingArrangement.
 *
 */

@XmlType(name = "LivingArrangement")
@XmlEnum
@XmlRootElement(name = "LivingArrangement")
public enum LivingArrangement {
	@XmlEnumValue("CS")
	CS("CS"),
	@XmlEnumValue("G")
	G("G"),
	@XmlEnumValue("H")
	H("H"),
	@XmlEnumValue("HL")
	HL("HL"),
	@XmlEnumValue("I")
	I("I"),
	@XmlEnumValue("M")
	M("M"),
	@XmlEnumValue("N")
	N("N"),
	@XmlEnumValue("PR")
	PR("PR"),
	@XmlEnumValue("R")
	R("R"),
	@XmlEnumValue("SL")
	SL("SL"),
	@XmlEnumValue("T")
	T("T"),
	@XmlEnumValue("X")
	X("X");
	
	private final String value;

    LivingArrangement(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static LivingArrangement fromValue(String v) {
        for (LivingArrangement c: LivingArrangement.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}