/**
 * COCTMT080000UVNonPersonLivingSubject.java
 *
 * File generated from the coctmt080000UV::COCTMT080000UVNonPersonLivingSubject uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.coctmt080000UV;

import java.util.ArrayList;
import java.util.List;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Marshaller;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.ihe.gazelle.gen.common.ConstraintValidatorModule;

import org.w3c.dom.Document;
import org.w3c.dom.Node;


/**
 * Description of the class COCTMT080000UVNonPersonLivingSubject.
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "COCT_MT080000UV.NonPersonLivingSubject", propOrder = {
	"realmCode",
	"typeId",
	"templateId",
	"code",
	"quantity",
	"name",
	"desc",
	"statusCode",
	"existenceTime",
	"telecom",
	"riskCode",
	"handlingCode",
	"administrativeGenderCode",
	"birthTime",
	"deceasedInd",
	"deceasedTime",
	"multipleBirthInd",
	"multipleBirthOrderNumber",
	"organDonorInd",
	"strainText",
	"genderStatusCode",
	"asSpecimenAlternateIdentifier",
	"asSpecimenStub",
	"asContent",
	"additive",
	"classCode",
	"determinerCode",
	"nullFlavor"
})
@XmlRootElement(name = "COCT_MT080000UV.NonPersonLivingSubject")
public class COCTMT080000UVNonPersonLivingSubject implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	
	@XmlElement(name = "realmCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode;
	@XmlElement(name = "typeId", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II typeId;
	@XmlElement(name = "templateId", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> templateId;
	@XmlElement(name = "code", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CE code;
	@XmlElement(name = "quantity", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.PQ> quantity;
	@XmlElement(name = "name", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.EN> name;
	@XmlElement(name = "desc", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.ED desc;
	@XmlElement(name = "statusCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CS statusCode;
	@XmlElement(name = "existenceTime", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS existenceTime;
	@XmlElement(name = "telecom", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.TEL> telecom;
	@XmlElement(name = "riskCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CE riskCode;
	@XmlElement(name = "handlingCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CE handlingCode;
	@XmlElement(name = "administrativeGenderCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CE administrativeGenderCode;
	@XmlElement(name = "birthTime", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.TS birthTime;
	@XmlElement(name = "deceasedInd", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.BL deceasedInd;
	@XmlElement(name = "deceasedTime", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.TS deceasedTime;
	@XmlElement(name = "multipleBirthInd", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.BL multipleBirthInd;
	@XmlElement(name = "multipleBirthOrderNumber", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.INT multipleBirthOrderNumber;
	@XmlElement(name = "organDonorInd", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.BL organDonorInd;
	@XmlElement(name = "strainText", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.ED strainText;
	@XmlElement(name = "genderStatusCode", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.CE genderStatusCode;
	@XmlElement(name = "asSpecimenAlternateIdentifier", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier> asSpecimenAlternateIdentifier;
	@XmlElement(name = "asSpecimenStub", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub> asSpecimenStub;
	@XmlElement(name = "asContent", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVContent1 asContent;
	@XmlElement(name = "additive", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive> additive;
	@XmlAttribute(name = "classCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.EntityClassNonPersonLivingSubject classCode;
	@XmlAttribute(name = "determinerCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.EntityDeterminer determinerCode;
	@XmlAttribute(name = "nullFlavor")
	public net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor;
	
	/**
	 * An attribute containing marshalled element node
	 */
	@XmlTransient
	private org.w3c.dom.Node _xmlNodePresentation;
	
	
	/**
	 * Return realmCode.
	 * @return realmCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> getRealmCode() {
		if (realmCode == null) {
	        realmCode = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.CS>();
	    }
	    return realmCode;
	}
	
	/**
	 * Set a value to attribute realmCode.
	 * @param realmCode.
	 */
	public void setRealmCode(List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode) {
	    this.realmCode = realmCode;
	}
	
	
	
	/**
	 * Add a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to add.
	 */
	public void addRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.add(realmCode_elt);
	}
	
	/**
	 * Remove a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to remove
	 */
	public void removeRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.remove(realmCode_elt);
	}
	
	/**
	 * Return typeId.
	 * @return typeId
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getTypeId() {
	    return typeId;
	}
	
	/**
	 * Set a value to attribute typeId.
	 * @param typeId.
	 */
	public void setTypeId(net.ihe.gazelle.hl7v3.datatypes.II typeId) {
	    this.typeId = typeId;
	}
	
	
	
	
	/**
	 * Return templateId.
	 * @return templateId
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getTemplateId() {
		if (templateId == null) {
	        templateId = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.II>();
	    }
	    return templateId;
	}
	
	/**
	 * Set a value to attribute templateId.
	 * @param templateId.
	 */
	public void setTemplateId(List<net.ihe.gazelle.hl7v3.datatypes.II> templateId) {
	    this.templateId = templateId;
	}
	
	
	
	/**
	 * Add a templateId to the templateId collection.
	 * @param templateId_elt Element to add.
	 */
	public void addTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.add(templateId_elt);
	}
	
	/**
	 * Remove a templateId to the templateId collection.
	 * @param templateId_elt Element to remove
	 */
	public void removeTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.remove(templateId_elt);
	}
	
	/**
	 * Return code.
	 * @return code
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CE getCode() {
	    return code;
	}
	
	/**
	 * Set a value to attribute code.
	 * @param code.
	 */
	public void setCode(net.ihe.gazelle.hl7v3.datatypes.CE code) {
	    this.code = code;
	}
	
	
	
	
	/**
	 * Return quantity.
	 * @return quantity
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.PQ> getQuantity() {
		if (quantity == null) {
	        quantity = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.PQ>();
	    }
	    return quantity;
	}
	
	/**
	 * Set a value to attribute quantity.
	 * @param quantity.
	 */
	public void setQuantity(List<net.ihe.gazelle.hl7v3.datatypes.PQ> quantity) {
	    this.quantity = quantity;
	}
	
	
	
	/**
	 * Add a quantity to the quantity collection.
	 * @param quantity_elt Element to add.
	 */
	public void addQuantity(net.ihe.gazelle.hl7v3.datatypes.PQ quantity_elt) {
	    this.quantity.add(quantity_elt);
	}
	
	/**
	 * Remove a quantity to the quantity collection.
	 * @param quantity_elt Element to remove
	 */
	public void removeQuantity(net.ihe.gazelle.hl7v3.datatypes.PQ quantity_elt) {
	    this.quantity.remove(quantity_elt);
	}
	
	/**
	 * Return name.
	 * @return name
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.EN> getName() {
		if (name == null) {
	        name = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.EN>();
	    }
	    return name;
	}
	
	/**
	 * Set a value to attribute name.
	 * @param name.
	 */
	public void setName(List<net.ihe.gazelle.hl7v3.datatypes.EN> name) {
	    this.name = name;
	}
	
	
	
	/**
	 * Add a name to the name collection.
	 * @param name_elt Element to add.
	 */
	public void addName(net.ihe.gazelle.hl7v3.datatypes.EN name_elt) {
	    this.name.add(name_elt);
	}
	
	/**
	 * Remove a name to the name collection.
	 * @param name_elt Element to remove
	 */
	public void removeName(net.ihe.gazelle.hl7v3.datatypes.EN name_elt) {
	    this.name.remove(name_elt);
	}
	
	/**
	 * Return desc.
	 * @return desc
	 */
	public net.ihe.gazelle.hl7v3.datatypes.ED getDesc() {
	    return desc;
	}
	
	/**
	 * Set a value to attribute desc.
	 * @param desc.
	 */
	public void setDesc(net.ihe.gazelle.hl7v3.datatypes.ED desc) {
	    this.desc = desc;
	}
	
	
	
	
	/**
	 * Return statusCode.
	 * @return statusCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CS getStatusCode() {
	    return statusCode;
	}
	
	/**
	 * Set a value to attribute statusCode.
	 * @param statusCode.
	 */
	public void setStatusCode(net.ihe.gazelle.hl7v3.datatypes.CS statusCode) {
	    this.statusCode = statusCode;
	}
	
	
	
	
	/**
	 * Return existenceTime.
	 * @return existenceTime
	 */
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS getExistenceTime() {
	    return existenceTime;
	}
	
	/**
	 * Set a value to attribute existenceTime.
	 * @param existenceTime.
	 */
	public void setExistenceTime(net.ihe.gazelle.hl7v3.datatypes.IVLTS existenceTime) {
	    this.existenceTime = existenceTime;
	}
	
	
	
	
	/**
	 * Return telecom.
	 * @return telecom
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.TEL> getTelecom() {
		if (telecom == null) {
	        telecom = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.TEL>();
	    }
	    return telecom;
	}
	
	/**
	 * Set a value to attribute telecom.
	 * @param telecom.
	 */
	public void setTelecom(List<net.ihe.gazelle.hl7v3.datatypes.TEL> telecom) {
	    this.telecom = telecom;
	}
	
	
	
	/**
	 * Add a telecom to the telecom collection.
	 * @param telecom_elt Element to add.
	 */
	public void addTelecom(net.ihe.gazelle.hl7v3.datatypes.TEL telecom_elt) {
	    this.telecom.add(telecom_elt);
	}
	
	/**
	 * Remove a telecom to the telecom collection.
	 * @param telecom_elt Element to remove
	 */
	public void removeTelecom(net.ihe.gazelle.hl7v3.datatypes.TEL telecom_elt) {
	    this.telecom.remove(telecom_elt);
	}
	
	/**
	 * Return riskCode.
	 * @return riskCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CE getRiskCode() {
	    return riskCode;
	}
	
	/**
	 * Set a value to attribute riskCode.
	 * @param riskCode.
	 */
	public void setRiskCode(net.ihe.gazelle.hl7v3.datatypes.CE riskCode) {
	    this.riskCode = riskCode;
	}
	
	
	
	
	/**
	 * Return handlingCode.
	 * @return handlingCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CE getHandlingCode() {
	    return handlingCode;
	}
	
	/**
	 * Set a value to attribute handlingCode.
	 * @param handlingCode.
	 */
	public void setHandlingCode(net.ihe.gazelle.hl7v3.datatypes.CE handlingCode) {
	    this.handlingCode = handlingCode;
	}
	
	
	
	
	/**
	 * Return administrativeGenderCode.
	 * @return administrativeGenderCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CE getAdministrativeGenderCode() {
	    return administrativeGenderCode;
	}
	
	/**
	 * Set a value to attribute administrativeGenderCode.
	 * @param administrativeGenderCode.
	 */
	public void setAdministrativeGenderCode(net.ihe.gazelle.hl7v3.datatypes.CE administrativeGenderCode) {
	    this.administrativeGenderCode = administrativeGenderCode;
	}
	
	
	
	
	/**
	 * Return birthTime.
	 * @return birthTime
	 */
	public net.ihe.gazelle.hl7v3.datatypes.TS getBirthTime() {
	    return birthTime;
	}
	
	/**
	 * Set a value to attribute birthTime.
	 * @param birthTime.
	 */
	public void setBirthTime(net.ihe.gazelle.hl7v3.datatypes.TS birthTime) {
	    this.birthTime = birthTime;
	}
	
	
	
	
	/**
	 * Return deceasedInd.
	 * @return deceasedInd
	 */
	public net.ihe.gazelle.hl7v3.datatypes.BL getDeceasedInd() {
	    return deceasedInd;
	}
	
	/**
	 * Set a value to attribute deceasedInd.
	 * @param deceasedInd.
	 */
	public void setDeceasedInd(net.ihe.gazelle.hl7v3.datatypes.BL deceasedInd) {
	    this.deceasedInd = deceasedInd;
	}
	
	
	
	
	/**
	 * Return deceasedTime.
	 * @return deceasedTime
	 */
	public net.ihe.gazelle.hl7v3.datatypes.TS getDeceasedTime() {
	    return deceasedTime;
	}
	
	/**
	 * Set a value to attribute deceasedTime.
	 * @param deceasedTime.
	 */
	public void setDeceasedTime(net.ihe.gazelle.hl7v3.datatypes.TS deceasedTime) {
	    this.deceasedTime = deceasedTime;
	}
	
	
	
	
	/**
	 * Return multipleBirthInd.
	 * @return multipleBirthInd
	 */
	public net.ihe.gazelle.hl7v3.datatypes.BL getMultipleBirthInd() {
	    return multipleBirthInd;
	}
	
	/**
	 * Set a value to attribute multipleBirthInd.
	 * @param multipleBirthInd.
	 */
	public void setMultipleBirthInd(net.ihe.gazelle.hl7v3.datatypes.BL multipleBirthInd) {
	    this.multipleBirthInd = multipleBirthInd;
	}
	
	
	
	
	/**
	 * Return multipleBirthOrderNumber.
	 * @return multipleBirthOrderNumber
	 */
	public net.ihe.gazelle.hl7v3.datatypes.INT getMultipleBirthOrderNumber() {
	    return multipleBirthOrderNumber;
	}
	
	/**
	 * Set a value to attribute multipleBirthOrderNumber.
	 * @param multipleBirthOrderNumber.
	 */
	public void setMultipleBirthOrderNumber(net.ihe.gazelle.hl7v3.datatypes.INT multipleBirthOrderNumber) {
	    this.multipleBirthOrderNumber = multipleBirthOrderNumber;
	}
	
	
	
	
	/**
	 * Return organDonorInd.
	 * @return organDonorInd
	 */
	public net.ihe.gazelle.hl7v3.datatypes.BL getOrganDonorInd() {
	    return organDonorInd;
	}
	
	/**
	 * Set a value to attribute organDonorInd.
	 * @param organDonorInd.
	 */
	public void setOrganDonorInd(net.ihe.gazelle.hl7v3.datatypes.BL organDonorInd) {
	    this.organDonorInd = organDonorInd;
	}
	
	
	
	
	/**
	 * Return strainText.
	 * @return strainText
	 */
	public net.ihe.gazelle.hl7v3.datatypes.ED getStrainText() {
	    return strainText;
	}
	
	/**
	 * Set a value to attribute strainText.
	 * @param strainText.
	 */
	public void setStrainText(net.ihe.gazelle.hl7v3.datatypes.ED strainText) {
	    this.strainText = strainText;
	}
	
	
	
	
	/**
	 * Return genderStatusCode.
	 * @return genderStatusCode
	 */
	public net.ihe.gazelle.hl7v3.datatypes.CE getGenderStatusCode() {
	    return genderStatusCode;
	}
	
	/**
	 * Set a value to attribute genderStatusCode.
	 * @param genderStatusCode.
	 */
	public void setGenderStatusCode(net.ihe.gazelle.hl7v3.datatypes.CE genderStatusCode) {
	    this.genderStatusCode = genderStatusCode;
	}
	
	
	
	
	/**
	 * Return asSpecimenAlternateIdentifier.
	 * @return asSpecimenAlternateIdentifier
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier> getAsSpecimenAlternateIdentifier() {
		if (asSpecimenAlternateIdentifier == null) {
	        asSpecimenAlternateIdentifier = new ArrayList<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier>();
	    }
	    return asSpecimenAlternateIdentifier;
	}
	
	/**
	 * Set a value to attribute asSpecimenAlternateIdentifier.
	 * @param asSpecimenAlternateIdentifier.
	 */
	public void setAsSpecimenAlternateIdentifier(List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier> asSpecimenAlternateIdentifier) {
	    this.asSpecimenAlternateIdentifier = asSpecimenAlternateIdentifier;
	}
	
	
	
	/**
	 * Add a asSpecimenAlternateIdentifier to the asSpecimenAlternateIdentifier collection.
	 * @param asSpecimenAlternateIdentifier_elt Element to add.
	 */
	public void addAsSpecimenAlternateIdentifier(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier asSpecimenAlternateIdentifier_elt) {
	    this.asSpecimenAlternateIdentifier.add(asSpecimenAlternateIdentifier_elt);
	}
	
	/**
	 * Remove a asSpecimenAlternateIdentifier to the asSpecimenAlternateIdentifier collection.
	 * @param asSpecimenAlternateIdentifier_elt Element to remove
	 */
	public void removeAsSpecimenAlternateIdentifier(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier asSpecimenAlternateIdentifier_elt) {
	    this.asSpecimenAlternateIdentifier.remove(asSpecimenAlternateIdentifier_elt);
	}
	
	/**
	 * Return asSpecimenStub.
	 * @return asSpecimenStub
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub> getAsSpecimenStub() {
		if (asSpecimenStub == null) {
	        asSpecimenStub = new ArrayList<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub>();
	    }
	    return asSpecimenStub;
	}
	
	/**
	 * Set a value to attribute asSpecimenStub.
	 * @param asSpecimenStub.
	 */
	public void setAsSpecimenStub(List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub> asSpecimenStub) {
	    this.asSpecimenStub = asSpecimenStub;
	}
	
	
	
	/**
	 * Add a asSpecimenStub to the asSpecimenStub collection.
	 * @param asSpecimenStub_elt Element to add.
	 */
	public void addAsSpecimenStub(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub asSpecimenStub_elt) {
	    this.asSpecimenStub.add(asSpecimenStub_elt);
	}
	
	/**
	 * Remove a asSpecimenStub to the asSpecimenStub collection.
	 * @param asSpecimenStub_elt Element to remove
	 */
	public void removeAsSpecimenStub(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub asSpecimenStub_elt) {
	    this.asSpecimenStub.remove(asSpecimenStub_elt);
	}
	
	/**
	 * Return asContent.
	 * @return asContent
	 */
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVContent1 getAsContent() {
	    return asContent;
	}
	
	/**
	 * Set a value to attribute asContent.
	 * @param asContent.
	 */
	public void setAsContent(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVContent1 asContent) {
	    this.asContent = asContent;
	}
	
	
	
	
	/**
	 * Return additive.
	 * @return additive
	 */
	public List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive> getAdditive() {
		if (additive == null) {
	        additive = new ArrayList<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive>();
	    }
	    return additive;
	}
	
	/**
	 * Set a value to attribute additive.
	 * @param additive.
	 */
	public void setAdditive(List<net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive> additive) {
	    this.additive = additive;
	}
	
	
	
	/**
	 * Add a additive to the additive collection.
	 * @param additive_elt Element to add.
	 */
	public void addAdditive(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive additive_elt) {
	    this.additive.add(additive_elt);
	}
	
	/**
	 * Remove a additive to the additive collection.
	 * @param additive_elt Element to remove
	 */
	public void removeAdditive(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive additive_elt) {
	    this.additive.remove(additive_elt);
	}
	
	/**
	 * Return classCode.
	 * @return classCode
	 */
	public net.ihe.gazelle.hl7v3.voc.EntityClassNonPersonLivingSubject getClassCode() {
	    return classCode;
	}
	
	/**
	 * Set a value to attribute classCode.
	 * @param classCode.
	 */
	public void setClassCode(net.ihe.gazelle.hl7v3.voc.EntityClassNonPersonLivingSubject classCode) {
	    this.classCode = classCode;
	}
	
	
	
	
	/**
	 * Return determinerCode.
	 * @return determinerCode
	 */
	public net.ihe.gazelle.hl7v3.voc.EntityDeterminer getDeterminerCode() {
	    return determinerCode;
	}
	
	/**
	 * Set a value to attribute determinerCode.
	 * @param determinerCode.
	 */
	public void setDeterminerCode(net.ihe.gazelle.hl7v3.voc.EntityDeterminer determinerCode) {
	    this.determinerCode = determinerCode;
	}
	
	
	
	
	/**
	 * Return nullFlavor.
	 * @return nullFlavor
	 */
	public net.ihe.gazelle.hl7v3.voc.NullFlavor getNullFlavor() {
	    return nullFlavor;
	}
	
	/**
	 * Set a value to attribute nullFlavor.
	 * @param nullFlavor.
	 */
	public void setNullFlavor(net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor) {
	    this.nullFlavor = nullFlavor;
	}
	
	
	
	
	
	public Node get_xmlNodePresentation() {
		if (_xmlNodePresentation == null){
				JAXBContext jc;
				DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
				dbf.setNamespaceAware(true);
				DocumentBuilder db = null;
				Document doc = null;
				try {
					db = dbf.newDocumentBuilder();
					doc = db.newDocument();
				} catch (ParserConfigurationException e1) {}
				try {
					jc = JAXBContext.newInstance("net.ihe.gazelle.hl7v3.coctmt080000UV");
					Marshaller m = jc.createMarshaller();
					m.marshal(this, doc);
					_xmlNodePresentation = doc.getElementsByTagNameNS("urn:hl7-org:v3", "COCT_MT080000UV.NonPersonLivingSubject").item(0);
				} catch (JAXBException e) {
					try{
						db = dbf.newDocumentBuilder();
						_xmlNodePresentation = db.newDocument();
					}
					catch(Exception ee){}
				}
			}
			return _xmlNodePresentation;
	}
	
	public void set_xmlNodePresentation(Node _xmlNodePresentation) {
		this._xmlNodePresentation = _xmlNodePresentation;
	}
	
	
	

	
	/**
     * validate by a module of validation
     * 
     */
   public static void validateByModule(COCTMT080000UVNonPersonLivingSubject cOCTMT080000UVNonPersonLivingSubject, String _location, ConstraintValidatorModule cvm, List<net.ihe.gazelle.validation.Notification> diagnostic){
   		if (cOCTMT080000UVNonPersonLivingSubject != null){
   			cvm.validate(cOCTMT080000UVNonPersonLivingSubject, _location, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CS realmCode: cOCTMT080000UVNonPersonLivingSubject.getRealmCode()){
					net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(realmCode, _location + "/realmCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getTypeId(), _location + "/typeId", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II templateId: cOCTMT080000UVNonPersonLivingSubject.getTemplateId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(templateId, _location + "/templateId[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getCode(), _location + "/code", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.PQ quantity: cOCTMT080000UVNonPersonLivingSubject.getQuantity()){
					net.ihe.gazelle.hl7v3.datatypes.PQ.validateByModule(quantity, _location + "/quantity[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.EN name: cOCTMT080000UVNonPersonLivingSubject.getName()){
					net.ihe.gazelle.hl7v3.datatypes.EN.validateByModule(name, _location + "/name[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.ED.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getDesc(), _location + "/desc", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getStatusCode(), _location + "/statusCode", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.IVLTS.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getExistenceTime(), _location + "/existenceTime", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.TEL telecom: cOCTMT080000UVNonPersonLivingSubject.getTelecom()){
					net.ihe.gazelle.hl7v3.datatypes.TEL.validateByModule(telecom, _location + "/telecom[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getRiskCode(), _location + "/riskCode", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getHandlingCode(), _location + "/handlingCode", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getAdministrativeGenderCode(), _location + "/administrativeGenderCode", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.TS.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getBirthTime(), _location + "/birthTime", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.BL.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getDeceasedInd(), _location + "/deceasedInd", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.TS.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getDeceasedTime(), _location + "/deceasedTime", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.BL.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getMultipleBirthInd(), _location + "/multipleBirthInd", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.INT.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getMultipleBirthOrderNumber(), _location + "/multipleBirthOrderNumber", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.BL.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getOrganDonorInd(), _location + "/organDonorInd", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.ED.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getStrainText(), _location + "/strainText", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.CE.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getGenderStatusCode(), _location + "/genderStatusCode", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier asSpecimenAlternateIdentifier: cOCTMT080000UVNonPersonLivingSubject.getAsSpecimenAlternateIdentifier()){
					net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenAlternateIdentifier.validateByModule(asSpecimenAlternateIdentifier, _location + "/asSpecimenAlternateIdentifier[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub asSpecimenStub: cOCTMT080000UVNonPersonLivingSubject.getAsSpecimenStub()){
					net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenStub.validateByModule(asSpecimenStub, _location + "/asSpecimenStub[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVContent1.validateByModule(cOCTMT080000UVNonPersonLivingSubject.getAsContent(), _location + "/asContent", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive additive: cOCTMT080000UVNonPersonLivingSubject.getAdditive()){
					net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAdditive.validateByModule(additive, _location + "/additive[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
    	}
    }

}