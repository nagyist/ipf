/**
 * InvoiceElementPaid.java
 *
 * File generated from the voc::InvoiceElementPaid uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration InvoiceElementPaid.
 *
 */

@XmlType(name = "InvoiceElementPaid")
@XmlEnum
@XmlRootElement(name = "InvoiceElementPaid")
public enum InvoiceElementPaid {
	@XmlEnumValue("PDNFPPELAT")
	PDNFPPELAT("PDNFPPELAT"),
	@XmlEnumValue("PDNFPPELCT")
	PDNFPPELCT("PDNFPPELCT"),
	@XmlEnumValue("PDNFPPMNAT")
	PDNFPPMNAT("PDNFPPMNAT"),
	@XmlEnumValue("PDNFPPMNCT")
	PDNFPPMNCT("PDNFPPMNCT"),
	@XmlEnumValue("PDNFSPELAT")
	PDNFSPELAT("PDNFSPELAT"),
	@XmlEnumValue("PDNFSPELCT")
	PDNFSPELCT("PDNFSPELCT"),
	@XmlEnumValue("PDNFSPMNAT")
	PDNFSPMNAT("PDNFSPMNAT"),
	@XmlEnumValue("PDNFSPMNCT")
	PDNFSPMNCT("PDNFSPMNCT"),
	@XmlEnumValue("PDNPPPELAT")
	PDNPPPELAT("PDNPPPELAT"),
	@XmlEnumValue("PDNPPPELCT")
	PDNPPPELCT("PDNPPPELCT"),
	@XmlEnumValue("PDNPPPMNAT")
	PDNPPPMNAT("PDNPPPMNAT"),
	@XmlEnumValue("PDNPPPMNCT")
	PDNPPPMNCT("PDNPPPMNCT"),
	@XmlEnumValue("PDNPSPELAT")
	PDNPSPELAT("PDNPSPELAT"),
	@XmlEnumValue("PDNPSPELCT")
	PDNPSPELCT("PDNPSPELCT"),
	@XmlEnumValue("PDNPSPMNAT")
	PDNPSPMNAT("PDNPSPMNAT"),
	@XmlEnumValue("PDNPSPMNCT")
	PDNPSPMNCT("PDNPSPMNCT"),
	@XmlEnumValue("PDPPPPELAT")
	PDPPPPELAT("PDPPPPELAT"),
	@XmlEnumValue("PDPPPPELCT")
	PDPPPPELCT("PDPPPPELCT"),
	@XmlEnumValue("PDPPPPMNAT")
	PDPPPPMNAT("PDPPPPMNAT"),
	@XmlEnumValue("PDPPPPMNCT")
	PDPPPPMNCT("PDPPPPMNCT"),
	@XmlEnumValue("PDPPSPELAT")
	PDPPSPELAT("PDPPSPELAT"),
	@XmlEnumValue("PDPPSPELCT")
	PDPPSPELCT("PDPPSPELCT"),
	@XmlEnumValue("PDPPSPMNAT")
	PDPPSPMNAT("PDPPSPMNAT"),
	@XmlEnumValue("PDPPSPMNCT")
	PDPPSPMNCT("PDPPSPMNCT");
	
	private final String value;

    InvoiceElementPaid(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static InvoiceElementPaid fromValue(String v) {
        for (InvoiceElementPaid c: InvoiceElementPaid.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}