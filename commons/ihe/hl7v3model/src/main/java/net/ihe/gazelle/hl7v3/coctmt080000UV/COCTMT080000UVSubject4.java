/**
 * COCTMT080000UVSubject4.java
 *
 * File generated from the coctmt080000UV::COCTMT080000UVSubject4 uml Class
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.coctmt080000UV;

import java.util.ArrayList;
import java.util.List;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Marshaller;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.ihe.gazelle.gen.common.ConstraintValidatorModule;

import org.w3c.dom.Document;
import org.w3c.dom.Node;


/**
 * Description of the class COCTMT080000UVSubject4.
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "COCT_MT080000UV.Subject4", propOrder = {
	"realmCode",
	"typeId",
	"templateId",
	"sequenceNumber",
	"time",
	"specimenObservationEvent",
	"automationSpecimenObservationEvent",
	"contextControlCode",
	"nullFlavor",
	"typeCode"
})
@XmlRootElement(name = "COCT_MT080000UV.Subject4")
public class COCTMT080000UVSubject4 implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	
	@XmlElement(name = "realmCode", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode;
	@XmlElement(name = "typeId", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.II typeId;
	@XmlElement(name = "templateId", namespace = "urn:hl7-org:v3")
	public List<net.ihe.gazelle.hl7v3.datatypes.II> templateId;
	@XmlElement(name = "sequenceNumber", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.INT sequenceNumber;
	@XmlElement(name = "time", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS time;
	@XmlElement(name = "specimenObservationEvent", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenObservationEvent specimenObservationEvent;
	@XmlElement(name = "automationSpecimenObservationEvent", namespace = "urn:hl7-org:v3")
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAutomationSpecimenObservationEvent automationSpecimenObservationEvent;
	@XmlAttribute(name = "contextControlCode")
	public net.ihe.gazelle.hl7v3.voc.ContextControl contextControlCode;
	@XmlAttribute(name = "nullFlavor")
	public net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor;
	@XmlAttribute(name = "typeCode", required = true)
	public net.ihe.gazelle.hl7v3.voc.ParticipationTargetSubject typeCode;
	
	/**
	 * An attribute containing marshalled element node
	 */
	@XmlTransient
	private org.w3c.dom.Node _xmlNodePresentation;
	
	
	/**
	 * Return realmCode.
	 * @return realmCode
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.CS> getRealmCode() {
		if (realmCode == null) {
	        realmCode = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.CS>();
	    }
	    return realmCode;
	}
	
	/**
	 * Set a value to attribute realmCode.
	 * @param realmCode.
	 */
	public void setRealmCode(List<net.ihe.gazelle.hl7v3.datatypes.CS> realmCode) {
	    this.realmCode = realmCode;
	}
	
	
	
	/**
	 * Add a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to add.
	 */
	public void addRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.add(realmCode_elt);
	}
	
	/**
	 * Remove a realmCode to the realmCode collection.
	 * @param realmCode_elt Element to remove
	 */
	public void removeRealmCode(net.ihe.gazelle.hl7v3.datatypes.CS realmCode_elt) {
	    this.realmCode.remove(realmCode_elt);
	}
	
	/**
	 * Return typeId.
	 * @return typeId
	 */
	public net.ihe.gazelle.hl7v3.datatypes.II getTypeId() {
	    return typeId;
	}
	
	/**
	 * Set a value to attribute typeId.
	 * @param typeId.
	 */
	public void setTypeId(net.ihe.gazelle.hl7v3.datatypes.II typeId) {
	    this.typeId = typeId;
	}
	
	
	
	
	/**
	 * Return templateId.
	 * @return templateId
	 */
	public List<net.ihe.gazelle.hl7v3.datatypes.II> getTemplateId() {
		if (templateId == null) {
	        templateId = new ArrayList<net.ihe.gazelle.hl7v3.datatypes.II>();
	    }
	    return templateId;
	}
	
	/**
	 * Set a value to attribute templateId.
	 * @param templateId.
	 */
	public void setTemplateId(List<net.ihe.gazelle.hl7v3.datatypes.II> templateId) {
	    this.templateId = templateId;
	}
	
	
	
	/**
	 * Add a templateId to the templateId collection.
	 * @param templateId_elt Element to add.
	 */
	public void addTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.add(templateId_elt);
	}
	
	/**
	 * Remove a templateId to the templateId collection.
	 * @param templateId_elt Element to remove
	 */
	public void removeTemplateId(net.ihe.gazelle.hl7v3.datatypes.II templateId_elt) {
	    this.templateId.remove(templateId_elt);
	}
	
	/**
	 * Return sequenceNumber.
	 * @return sequenceNumber
	 */
	public net.ihe.gazelle.hl7v3.datatypes.INT getSequenceNumber() {
	    return sequenceNumber;
	}
	
	/**
	 * Set a value to attribute sequenceNumber.
	 * @param sequenceNumber.
	 */
	public void setSequenceNumber(net.ihe.gazelle.hl7v3.datatypes.INT sequenceNumber) {
	    this.sequenceNumber = sequenceNumber;
	}
	
	
	
	
	/**
	 * Return time.
	 * @return time
	 */
	public net.ihe.gazelle.hl7v3.datatypes.IVLTS getTime() {
	    return time;
	}
	
	/**
	 * Set a value to attribute time.
	 * @param time.
	 */
	public void setTime(net.ihe.gazelle.hl7v3.datatypes.IVLTS time) {
	    this.time = time;
	}
	
	
	
	
	/**
	 * Return specimenObservationEvent.
	 * @return specimenObservationEvent
	 */
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenObservationEvent getSpecimenObservationEvent() {
	    return specimenObservationEvent;
	}
	
	/**
	 * Set a value to attribute specimenObservationEvent.
	 * @param specimenObservationEvent.
	 */
	public void setSpecimenObservationEvent(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenObservationEvent specimenObservationEvent) {
	    this.specimenObservationEvent = specimenObservationEvent;
	}
	
	
	
	
	/**
	 * Return automationSpecimenObservationEvent.
	 * @return automationSpecimenObservationEvent
	 */
	public net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAutomationSpecimenObservationEvent getAutomationSpecimenObservationEvent() {
	    return automationSpecimenObservationEvent;
	}
	
	/**
	 * Set a value to attribute automationSpecimenObservationEvent.
	 * @param automationSpecimenObservationEvent.
	 */
	public void setAutomationSpecimenObservationEvent(net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAutomationSpecimenObservationEvent automationSpecimenObservationEvent) {
	    this.automationSpecimenObservationEvent = automationSpecimenObservationEvent;
	}
	
	
	
	
	/**
	 * Return contextControlCode.
	 * @return contextControlCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ContextControl getContextControlCode() {
	    return contextControlCode;
	}
	
	/**
	 * Set a value to attribute contextControlCode.
	 * @param contextControlCode.
	 */
	public void setContextControlCode(net.ihe.gazelle.hl7v3.voc.ContextControl contextControlCode) {
	    this.contextControlCode = contextControlCode;
	}
	
	
	
	
	/**
	 * Return nullFlavor.
	 * @return nullFlavor
	 */
	public net.ihe.gazelle.hl7v3.voc.NullFlavor getNullFlavor() {
	    return nullFlavor;
	}
	
	/**
	 * Set a value to attribute nullFlavor.
	 * @param nullFlavor.
	 */
	public void setNullFlavor(net.ihe.gazelle.hl7v3.voc.NullFlavor nullFlavor) {
	    this.nullFlavor = nullFlavor;
	}
	
	
	
	
	/**
	 * Return typeCode.
	 * @return typeCode
	 */
	public net.ihe.gazelle.hl7v3.voc.ParticipationTargetSubject getTypeCode() {
	    return typeCode;
	}
	
	/**
	 * Set a value to attribute typeCode.
	 * @param typeCode.
	 */
	public void setTypeCode(net.ihe.gazelle.hl7v3.voc.ParticipationTargetSubject typeCode) {
	    this.typeCode = typeCode;
	}
	
	
	
	
	
	public Node get_xmlNodePresentation() {
		if (_xmlNodePresentation == null){
				JAXBContext jc;
				DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
				dbf.setNamespaceAware(true);
				DocumentBuilder db = null;
				Document doc = null;
				try {
					db = dbf.newDocumentBuilder();
					doc = db.newDocument();
				} catch (ParserConfigurationException e1) {}
				try {
					jc = JAXBContext.newInstance("net.ihe.gazelle.hl7v3.coctmt080000UV");
					Marshaller m = jc.createMarshaller();
					m.marshal(this, doc);
					_xmlNodePresentation = doc.getElementsByTagNameNS("urn:hl7-org:v3", "COCT_MT080000UV.Subject4").item(0);
				} catch (JAXBException e) {
					try{
						db = dbf.newDocumentBuilder();
						_xmlNodePresentation = db.newDocument();
					}
					catch(Exception ee){}
				}
			}
			return _xmlNodePresentation;
	}
	
	public void set_xmlNodePresentation(Node _xmlNodePresentation) {
		this._xmlNodePresentation = _xmlNodePresentation;
	}
	
	
	

	
	/**
     * validate by a module of validation
     * 
     */
   public static void validateByModule(COCTMT080000UVSubject4 cOCTMT080000UVSubject4, String _location, ConstraintValidatorModule cvm, List<net.ihe.gazelle.validation.Notification> diagnostic){
   		if (cOCTMT080000UVSubject4 != null){
   			cvm.validate(cOCTMT080000UVSubject4, _location, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.CS realmCode: cOCTMT080000UVSubject4.getRealmCode()){
					net.ihe.gazelle.hl7v3.datatypes.CS.validateByModule(realmCode, _location + "/realmCode[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(cOCTMT080000UVSubject4.getTypeId(), _location + "/typeId", cvm, diagnostic);
			{
				int i = 0;
				for (net.ihe.gazelle.hl7v3.datatypes.II templateId: cOCTMT080000UVSubject4.getTemplateId()){
					net.ihe.gazelle.hl7v3.datatypes.II.validateByModule(templateId, _location + "/templateId[" + i + "]", cvm, diagnostic);
					i++;
				}
			}
			
			net.ihe.gazelle.hl7v3.datatypes.INT.validateByModule(cOCTMT080000UVSubject4.getSequenceNumber(), _location + "/sequenceNumber", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.datatypes.IVLTS.validateByModule(cOCTMT080000UVSubject4.getTime(), _location + "/time", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVSpecimenObservationEvent.validateByModule(cOCTMT080000UVSubject4.getSpecimenObservationEvent(), _location + "/specimenObservationEvent", cvm, diagnostic);
			net.ihe.gazelle.hl7v3.coctmt080000UV.COCTMT080000UVAutomationSpecimenObservationEvent.validateByModule(cOCTMT080000UVSubject4.getAutomationSpecimenObservationEvent(), _location + "/automationSpecimenObservationEvent", cvm, diagnostic);
    	}
    }

}