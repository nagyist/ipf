/**
 * RoleClassRelationshipFormal.java
 * <p>
 * File generated from the voc::RoleClassRelationshipFormal uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration RoleClassRelationshipFormal.
 *
 */

@XmlType(name = "RoleClassRelationshipFormal")
@XmlEnum
@XmlRootElement(name = "RoleClassRelationshipFormal")
public enum RoleClassRelationshipFormal {
	@XmlEnumValue("AFFL")
	AFFL("AFFL"),
	@XmlEnumValue("AGNT")
	AGNT("AGNT"),
	@XmlEnumValue("ASSIGNED")
	ASSIGNED("ASSIGNED"),
	@XmlEnumValue("CASEBJ")
	CASEBJ("CASEBJ"),
	@XmlEnumValue("CIT")
	CIT("CIT"),
	@XmlEnumValue("CLAIM")
	CLAIM("CLAIM"),
	@XmlEnumValue("COMPAR")
	COMPAR("COMPAR"),
	@XmlEnumValue("CON")
	CON("CON"),
	@XmlEnumValue("COVPTY")
	COVPTY("COVPTY"),
	@XmlEnumValue("CRINV")
	CRINV("CRINV"),
	@XmlEnumValue("CRSPNSR")
	CRSPNSR("CRSPNSR"),
	@XmlEnumValue("DEPEN")
	DEPEN("DEPEN"),
	@XmlEnumValue("ECON")
	ECON("ECON"),
	@XmlEnumValue("EMP")
	EMP("EMP"),
	@XmlEnumValue("GUAR")
	GUAR("GUAR"),
	@XmlEnumValue("GUARD")
	GUARD("GUARD"),
	@XmlEnumValue("INDIV")
	INDIV("INDIV"),
	@XmlEnumValue("INVSBJ")
	INVSBJ("INVSBJ"),
	@XmlEnumValue("LIC")
	LIC("LIC"),
	@XmlEnumValue("MIL")
	MIL("MIL"),
	@XmlEnumValue("NAMED")
	NAMED("NAMED"),
	@XmlEnumValue("NOK")
	NOK("NOK"),
	@XmlEnumValue("NOT")
	NOT("NOT"),
	@XmlEnumValue("PAT")
	PAT("PAT"),
	@XmlEnumValue("PAYEE")
	PAYEE("PAYEE"),
	@XmlEnumValue("PAYOR")
	PAYOR("PAYOR"),
	@XmlEnumValue("POLHOLD")
	POLHOLD("POLHOLD"),
	@XmlEnumValue("PROG")
	PROG("PROG"),
	@XmlEnumValue("PROV")
	PROV("PROV"),
	@XmlEnumValue("QUAL")
	QUAL("QUAL"),
	@XmlEnumValue("RESBJ")
	RESBJ("RESBJ"),
	@XmlEnumValue("SGNOFF")
	SGNOFF("SGNOFF"),
	@XmlEnumValue("SPNSR")
	SPNSR("SPNSR"),
	@XmlEnumValue("STD")
	STD("STD"),
	@XmlEnumValue("SUBSCR")
	SUBSCR("SUBSCR"),
	@XmlEnumValue("UNDWRT")
	UNDWRT("UNDWRT");
	
	private final String value;

    RoleClassRelationshipFormal(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static RoleClassRelationshipFormal fromValue(String v) {
        for (RoleClassRelationshipFormal c: RoleClassRelationshipFormal.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}