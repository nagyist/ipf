/**
 * DataTypeSequenceOfCharacterStrings.java
 *
 * File generated from the voc::DataTypeSequenceOfCharacterStrings uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration DataTypeSequenceOfCharacterStrings.
 *
 */

@XmlType(name = "DataTypeSequenceOfCharacterStrings")
@XmlEnum
@XmlRootElement(name = "DataTypeSequenceOfCharacterStrings")
public enum DataTypeSequenceOfCharacterStrings {
	@XmlEnumValue("AD")
	AD("AD"),
	@XmlEnumValue("LIST<ADXP>")
	LISTADXP("LIST<ADXP>"),
	@XmlEnumValue("LIST<PNXP>")
	LISTPNXP("LIST<PNXP>"),
	@XmlEnumValue("LIST<ST>")
	LISTST("LIST<ST>"),
	@XmlEnumValue("PN")
	PN("PN");
	
	private final String value;

    DataTypeSequenceOfCharacterStrings(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static DataTypeSequenceOfCharacterStrings fromValue(String v) {
        for (DataTypeSequenceOfCharacterStrings c: DataTypeSequenceOfCharacterStrings.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}