/**
 * ObservationAlert.java
 *
 * File generated from the voc::ObservationAlert uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ObservationAlert.
 *
 */

@XmlType(name = "ObservationAlert")
@XmlEnum
@XmlRootElement(name = "ObservationAlert")
public enum ObservationAlert {
	@XmlEnumValue("AGE")
	AGE("AGE"),
	@XmlEnumValue("COND")
	COND("COND"),
	@XmlEnumValue("CREACT")
	CREACT("CREACT"),
	@XmlEnumValue("GEN")
	GEN("GEN"),
	@XmlEnumValue("GEND")
	GEND("GEND"),
	@XmlEnumValue("LAB")
	LAB("LAB"),
	@XmlEnumValue("OBSA")
	OBSA("OBSA"),
	@XmlEnumValue("REACT")
	REACT("REACT"),
	@XmlEnumValue("RREACT")
	RREACT("RREACT");
	
	private final String value;

    ObservationAlert(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ObservationAlert fromValue(String v) {
        for (ObservationAlert c: ObservationAlert.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}