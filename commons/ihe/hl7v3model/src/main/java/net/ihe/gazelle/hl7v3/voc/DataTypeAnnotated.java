/**
 * DataTypeAnnotated.java
 *
 * File generated from the voc::DataTypeAnnotated uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration DataTypeAnnotated.
 *
 */

@XmlType(name = "DataTypeAnnotated")
@XmlEnum
@XmlRootElement(name = "DataTypeAnnotated")
public enum DataTypeAnnotated {
	@XmlEnumValue("ANT<ANY>")
	ANTANY("ANT<ANY>"),
	@XmlEnumValue("ANT<CD>")
	ANTCD("ANT<CD>"),
	@XmlEnumValue("ANT<PQ>")
	ANTPQ("ANT<PQ>");
	
	private final String value;

    DataTypeAnnotated(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static DataTypeAnnotated fromValue(String v) {
        for (DataTypeAnnotated c: DataTypeAnnotated.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}