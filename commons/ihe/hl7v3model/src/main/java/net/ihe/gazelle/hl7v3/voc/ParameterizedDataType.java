/**
 * ParameterizedDataType.java
 *
 * File generated from the voc::ParameterizedDataType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration ParameterizedDataType.
 *
 */

@XmlType(name = "ParameterizedDataType")
@XmlEnum
@XmlRootElement(name = "ParameterizedDataType")
public enum ParameterizedDataType {
	@XmlEnumValue("ANT<T>")
	ANTT("ANT<T>"),
	@XmlEnumValue("BAG<T>")
	BAGT("BAG<T>"),
	@XmlEnumValue("EIVL<T>")
	EIVLT("EIVL<T>"),
	@XmlEnumValue("HXIT<T>")
	HXITT("HXIT<T>"),
	@XmlEnumValue("IVL<T>")
	IVLT("IVL<T>"),
	@XmlEnumValue("LIST<T>")
	LISTT("LIST<T>"),
	@XmlEnumValue("NPPD<T>")
	NPPDT("NPPD<T>"),
	@XmlEnumValue("PIVL<T>")
	PIVLT("PIVL<T>"),
	@XmlEnumValue("PPD<T>")
	PPDT("PPD<T>"),
	@XmlEnumValue("SET<T>")
	SETT("SET<T>"),
	@XmlEnumValue("T")
	T("T"),
	@XmlEnumValue("UVN<T>")
	UVNT("UVN<T>"),
	@XmlEnumValue("UVP<T>")
	UVPT("UVP<T>");
	
	private final String value;

    ParameterizedDataType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static ParameterizedDataType fromValue(String v) {
        for (ParameterizedDataType c: ParameterizedDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}