/**
 * EntityRisk.java
 * <p>
 * File generated from the voc::EntityRisk uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration EntityRisk.
 *
 */

@XmlType(name = "EntityRisk")
@XmlEnum
@XmlRootElement(name = "EntityRisk")
public enum EntityRisk {
	@XmlEnumValue("AGG")
	AGG("AGG"),
	@XmlEnumValue("BHZ")
	BHZ("BHZ"),
	@XmlEnumValue("BIO")
	BIO("BIO"),
	@XmlEnumValue("COR")
	COR("COR"),
	@XmlEnumValue("ESC")
	ESC("ESC"),
	@XmlEnumValue("EXP")
	EXP("EXP"),
	@XmlEnumValue("IFL")
	IFL("IFL"),
	@XmlEnumValue("INF")
	INF("INF"),
	@XmlEnumValue("INJ")
	INJ("INJ"),
	@XmlEnumValue("POI")
	POI("POI"),
	@XmlEnumValue("RAD")
	RAD("RAD");
	
	private final String value;

    EntityRisk(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static EntityRisk fromValue(String v) {
        for (EntityRisk c: EntityRisk.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}