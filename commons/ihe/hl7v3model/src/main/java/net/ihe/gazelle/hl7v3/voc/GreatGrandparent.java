/**
 * GreatGrandparent.java
 *
 * File generated from the voc::GreatGrandparent uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration GreatGrandparent.
 *
 */

@XmlType(name = "GreatGrandparent")
@XmlEnum
@XmlRootElement(name = "GreatGrandparent")
public enum GreatGrandparent {
	@XmlEnumValue("GGRFTH")
	GGRFTH("GGRFTH"),
	@XmlEnumValue("GGRMTH")
	GGRMTH("GGRMTH"),
	@XmlEnumValue("GGRPRN")
	GGRPRN("GGRPRN"),
	@XmlEnumValue("MGGRFTH")
	MGGRFTH("MGGRFTH"),
	@XmlEnumValue("MGGRMTH")
	MGGRMTH("MGGRMTH"),
	@XmlEnumValue("MGGRPRN")
	MGGRPRN("MGGRPRN"),
	@XmlEnumValue("PGGRFTH")
	PGGRFTH("PGGRFTH"),
	@XmlEnumValue("PGGRMTH")
	PGGRMTH("PGGRMTH"),
	@XmlEnumValue("PGGRPRN")
	PGGRPRN("PGGRPRN");
	
	private final String value;

    GreatGrandparent(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static GreatGrandparent fromValue(String v) {
        for (GreatGrandparent c: GreatGrandparent.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}