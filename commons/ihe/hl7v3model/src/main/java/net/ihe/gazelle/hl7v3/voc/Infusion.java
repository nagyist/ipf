/**
 * Infusion.java
 * <p>
 * File generated from the voc::Infusion uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration Infusion.
 *
 */

@XmlType(name = "Infusion")
@XmlEnum
@XmlRootElement(name = "Infusion")
public enum Infusion {
	@XmlEnumValue("EPI")
	EPI("EPI"),
	@XmlEnumValue("IA")
	IA("IA"),
	@XmlEnumValue("IC")
	IC("IC"),
	@XmlEnumValue("ICOR")
	ICOR("ICOR"),
	@XmlEnumValue("IOSSC")
	IOSSC("IOSSC"),
	@XmlEnumValue("IT")
	IT("IT"),
	@XmlEnumValue("IV")
	IV("IV"),
	@XmlEnumValue("IVASCINFUS")
	IVASCINFUS("IVASCINFUS"),
	@XmlEnumValue("IVC")
	IVC("IVC"),
	@XmlEnumValue("IVCC")
	IVCC("IVCC"),
	@XmlEnumValue("IVCI")
	IVCI("IVCI"),
	@XmlEnumValue("PCA")
	PCA("PCA"),
	@XmlEnumValue("SQINFUS")
	SQINFUS("SQINFUS");
	
	private final String value;

    Infusion(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static Infusion fromValue(String v) {
        for (Infusion c: Infusion.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}