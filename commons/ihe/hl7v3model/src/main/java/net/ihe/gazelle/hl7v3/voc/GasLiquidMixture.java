/**
 * GasLiquidMixture.java
 * <p>
 * File generated from the voc::GasLiquidMixture uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration GasLiquidMixture.
 *
 */

@XmlType(name = "GasLiquidMixture")
@XmlEnum
@XmlRootElement(name = "GasLiquidMixture")
public enum GasLiquidMixture {
	@XmlEnumValue("AER")
	AER("AER"),
	@XmlEnumValue("BAINHL")
	BAINHL("BAINHL"),
	@XmlEnumValue("DERMSPRY")
	DERMSPRY("DERMSPRY"),
	@XmlEnumValue("FOAM")
	FOAM("FOAM"),
	@XmlEnumValue("FOAMAPL")
	FOAMAPL("FOAMAPL"),
	@XmlEnumValue("INHLSOL")
	INHLSOL("INHLSOL"),
	@XmlEnumValue("MDINHL")
	MDINHL("MDINHL"),
	@XmlEnumValue("NASSPRY")
	NASSPRY("NASSPRY"),
	@XmlEnumValue("RECFORM")
	RECFORM("RECFORM"),
	@XmlEnumValue("RECSPRY")
	RECSPRY("RECSPRY"),
	@XmlEnumValue("VAGFOAM")
	VAGFOAM("VAGFOAM"),
	@XmlEnumValue("VAGFOAMAPL")
	VAGFOAMAPL("VAGFOAMAPL"),
	@XmlEnumValue("VAGSPRY")
	VAGSPRY("VAGSPRY");
	
	private final String value;

    GasLiquidMixture(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static GasLiquidMixture fromValue(String v) {
        for (GasLiquidMixture c: GasLiquidMixture.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}