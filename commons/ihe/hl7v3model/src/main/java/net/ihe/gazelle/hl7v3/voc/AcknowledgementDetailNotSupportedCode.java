/**
 * AcknowledgementDetailNotSupportedCode.java
 *
 * File generated from the voc::AcknowledgementDetailNotSupportedCode uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration AcknowledgementDetailNotSupportedCode.
 *
 */

@XmlType(name = "AcknowledgementDetailNotSupportedCode")
@XmlEnum
@XmlRootElement(name = "AcknowledgementDetailNotSupportedCode")
public enum AcknowledgementDetailNotSupportedCode {
	@XmlEnumValue("NS200")
	NS200("NS200"),
	@XmlEnumValue("NS202")
	NS202("NS202"),
	@XmlEnumValue("NS203")
	NS203("NS203"),
	@XmlEnumValue("NS250")
	NS250("NS250"),
	@XmlEnumValue("NS260")
	NS260("NS260"),
	@XmlEnumValue("NS261")
	NS261("NS261");
	
	private final String value;

    AcknowledgementDetailNotSupportedCode(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static AcknowledgementDetailNotSupportedCode fromValue(String v) {
        for (AcknowledgementDetailNotSupportedCode c: AcknowledgementDetailNotSupportedCode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}