/**
 * FamilyMember.java
 *
 * File generated from the voc::FamilyMember uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration FamilyMember.
 *
 */

@XmlType(name = "FamilyMember")
@XmlEnum
@XmlRootElement(name = "FamilyMember")
public enum FamilyMember {
	@XmlEnumValue("AUNT")
	AUNT("AUNT"),
	@XmlEnumValue("BRO")
	BRO("BRO"),
	@XmlEnumValue("BROINLAW")
	BROINLAW("BROINLAW"),
	@XmlEnumValue("CHILD")
	CHILD("CHILD"),
	@XmlEnumValue("CHLDADOPT")
	CHLDADOPT("CHLDADOPT"),
	@XmlEnumValue("CHLDFOST")
	CHLDFOST("CHLDFOST"),
	@XmlEnumValue("CHLDINLAW")
	CHLDINLAW("CHLDINLAW"),
	@XmlEnumValue("COUSN")
	COUSN("COUSN"),
	@XmlEnumValue("DAU")
	DAU("DAU"),
	@XmlEnumValue("DAUADOPT")
	DAUADOPT("DAUADOPT"),
	@XmlEnumValue("DAUFOST")
	DAUFOST("DAUFOST"),
	@XmlEnumValue("DAUINLAW")
	DAUINLAW("DAUINLAW"),
	@XmlEnumValue("DOMPART")
	DOMPART("DOMPART"),
	@XmlEnumValue("FAMMEMB")
	FAMMEMB("FAMMEMB"),
	@XmlEnumValue("FTH")
	FTH("FTH"),
	@XmlEnumValue("FTHINLAW")
	FTHINLAW("FTHINLAW"),
	@XmlEnumValue("GGRFTH")
	GGRFTH("GGRFTH"),
	@XmlEnumValue("GGRMTH")
	GGRMTH("GGRMTH"),
	@XmlEnumValue("GGRPRN")
	GGRPRN("GGRPRN"),
	@XmlEnumValue("GRFTH")
	GRFTH("GRFTH"),
	@XmlEnumValue("GRMTH")
	GRMTH("GRMTH"),
	@XmlEnumValue("GRNDCHILD")
	GRNDCHILD("GRNDCHILD"),
	@XmlEnumValue("GRNDDAU")
	GRNDDAU("GRNDDAU"),
	@XmlEnumValue("GRNDSON")
	GRNDSON("GRNDSON"),
	@XmlEnumValue("GRPRN")
	GRPRN("GRPRN"),
	@XmlEnumValue("HBRO")
	HBRO("HBRO"),
	@XmlEnumValue("HSIB")
	HSIB("HSIB"),
	@XmlEnumValue("HSIS")
	HSIS("HSIS"),
	@XmlEnumValue("HUSB")
	HUSB("HUSB"),
	@XmlEnumValue("MAUNT")
	MAUNT("MAUNT"),
	@XmlEnumValue("MCOUSN")
	MCOUSN("MCOUSN"),
	@XmlEnumValue("MGGRFTH")
	MGGRFTH("MGGRFTH"),
	@XmlEnumValue("MGGRMTH")
	MGGRMTH("MGGRMTH"),
	@XmlEnumValue("MGGRPRN")
	MGGRPRN("MGGRPRN"),
	@XmlEnumValue("MGRFTH")
	MGRFTH("MGRFTH"),
	@XmlEnumValue("MGRMTH")
	MGRMTH("MGRMTH"),
	@XmlEnumValue("MGRPRN")
	MGRPRN("MGRPRN"),
	@XmlEnumValue("MTH")
	MTH("MTH"),
	@XmlEnumValue("MTHINLAW")
	MTHINLAW("MTHINLAW"),
	@XmlEnumValue("MUNCLE")
	MUNCLE("MUNCLE"),
	@XmlEnumValue("NBRO")
	NBRO("NBRO"),
	@XmlEnumValue("NCHILD")
	NCHILD("NCHILD"),
	@XmlEnumValue("NEPHEW")
	NEPHEW("NEPHEW"),
	@XmlEnumValue("NFTH")
	NFTH("NFTH"),
	@XmlEnumValue("NFTHF")
	NFTHF("NFTHF"),
	@XmlEnumValue("NIECE")
	NIECE("NIECE"),
	@XmlEnumValue("NIENEPH")
	NIENEPH("NIENEPH"),
	@XmlEnumValue("NMTH")
	NMTH("NMTH"),
	@XmlEnumValue("NPRN")
	NPRN("NPRN"),
	@XmlEnumValue("NSIB")
	NSIB("NSIB"),
	@XmlEnumValue("NSIS")
	NSIS("NSIS"),
	@XmlEnumValue("PAUNT")
	PAUNT("PAUNT"),
	@XmlEnumValue("PCOUSN")
	PCOUSN("PCOUSN"),
	@XmlEnumValue("PGGRFTH")
	PGGRFTH("PGGRFTH"),
	@XmlEnumValue("PGGRMTH")
	PGGRMTH("PGGRMTH"),
	@XmlEnumValue("PGGRPRN")
	PGGRPRN("PGGRPRN"),
	@XmlEnumValue("PGRFTH")
	PGRFTH("PGRFTH"),
	@XmlEnumValue("PGRMTH")
	PGRMTH("PGRMTH"),
	@XmlEnumValue("PGRPRN")
	PGRPRN("PGRPRN"),
	@XmlEnumValue("PRN")
	PRN("PRN"),
	@XmlEnumValue("PRNINLAW")
	PRNINLAW("PRNINLAW"),
	@XmlEnumValue("PUNCLE")
	PUNCLE("PUNCLE"),
	@XmlEnumValue("ROOM")
	ROOM("ROOM"),
	@XmlEnumValue("SIB")
	SIB("SIB"),
	@XmlEnumValue("SIBINLAW")
	SIBINLAW("SIBINLAW"),
	@XmlEnumValue("SIGOTHR")
	SIGOTHR("SIGOTHR"),
	@XmlEnumValue("SIS")
	SIS("SIS"),
	@XmlEnumValue("SISINLAW")
	SISINLAW("SISINLAW"),
	@XmlEnumValue("SON")
	SON("SON"),
	@XmlEnumValue("SONADOPT")
	SONADOPT("SONADOPT"),
	@XmlEnumValue("SONFOST")
	SONFOST("SONFOST"),
	@XmlEnumValue("SONINLAW")
	SONINLAW("SONINLAW"),
	@XmlEnumValue("SPS")
	SPS("SPS"),
	@XmlEnumValue("STPBRO")
	STPBRO("STPBRO"),
	@XmlEnumValue("STPCHLD")
	STPCHLD("STPCHLD"),
	@XmlEnumValue("STPDAU")
	STPDAU("STPDAU"),
	@XmlEnumValue("STPFTH")
	STPFTH("STPFTH"),
	@XmlEnumValue("STPMTH")
	STPMTH("STPMTH"),
	@XmlEnumValue("STPPRN")
	STPPRN("STPPRN"),
	@XmlEnumValue("STPSIB")
	STPSIB("STPSIB"),
	@XmlEnumValue("STPSIS")
	STPSIS("STPSIS"),
	@XmlEnumValue("STPSON")
	STPSON("STPSON"),
	@XmlEnumValue("UNCLE")
	UNCLE("UNCLE"),
	@XmlEnumValue("WIFE")
	WIFE("WIFE");
	
	private final String value;

    FamilyMember(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static FamilyMember fromValue(String v) {
        for (FamilyMember c: FamilyMember.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}