/**
 * VaccineManufacturer.java
 *
 * File generated from the voc::VaccineManufacturer uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration VaccineManufacturer.
 *
 */

@XmlType(name = "VaccineManufacturer")
@XmlEnum
@XmlRootElement(name = "VaccineManufacturer")
public enum VaccineManufacturer {
	@XmlEnumValue("AB")
	AB("AB"),
	@XmlEnumValue("AD")
	AD("AD"),
	@XmlEnumValue("ALP")
	ALP("ALP"),
	@XmlEnumValue("AR")
	AR("AR"),
	@XmlEnumValue("AVI")
	AVI("AVI"),
	@XmlEnumValue("BA")
	BA("BA"),
	@XmlEnumValue("BAY")
	BAY("BAY"),
	@XmlEnumValue("BP")
	BP("BP"),
	@XmlEnumValue("BPC")
	BPC("BPC"),
	@XmlEnumValue("CEN")
	CEN("CEN"),
	@XmlEnumValue("CHI")
	CHI("CHI"),
	@XmlEnumValue("CON")
	CON("CON"),
	@XmlEnumValue("EVN")
	EVN("EVN"),
	@XmlEnumValue("GRE")
	GRE("GRE"),
	@XmlEnumValue("IAG")
	IAG("IAG"),
	@XmlEnumValue("IM")
	IM("IM"),
	@XmlEnumValue("IUS")
	IUS("IUS"),
	@XmlEnumValue("JPN")
	JPN("JPN"),
	@XmlEnumValue("KGC")
	KGC("KGC"),
	@XmlEnumValue("LED")
	LED("LED"),
	@XmlEnumValue("MA")
	MA("MA"),
	@XmlEnumValue("MED")
	MED("MED"),
	@XmlEnumValue("MIL")
	MIL("MIL"),
	@XmlEnumValue("MIP")
	MIP("MIP"),
	@XmlEnumValue("MSD")
	MSD("MSD"),
	@XmlEnumValue("NAB")
	NAB("NAB"),
	@XmlEnumValue("NAV")
	NAV("NAV"),
	@XmlEnumValue("NOV")
	NOV("NOV"),
	@XmlEnumValue("NYB")
	NYB("NYB"),
	@XmlEnumValue("ORT")
	ORT("ORT"),
	@XmlEnumValue("OTC")
	OTC("OTC"),
	@XmlEnumValue("PD")
	PD("PD"),
	@XmlEnumValue("PMC")
	PMC("PMC"),
	@XmlEnumValue("PRX")
	PRX("PRX"),
	@XmlEnumValue("SCL")
	SCL("SCL"),
	@XmlEnumValue("SI")
	SI("SI"),
	@XmlEnumValue("SKB")
	SKB("SKB"),
	@XmlEnumValue("USA")
	USA("USA"),
	@XmlEnumValue("WA")
	WA("WA"),
	@XmlEnumValue("WAL")
	WAL("WAL");
	
	private final String value;

    VaccineManufacturer(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static VaccineManufacturer fromValue(String v) {
        for (VaccineManufacturer c: VaccineManufacturer.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}