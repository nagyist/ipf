/**
 * DependentCoveredPartyRoleType.java
 *
 * File generated from the voc::DependentCoveredPartyRoleType uml Enumeration
 * Generated by IHE - europe, gazelle team
 */
package net.ihe.gazelle.hl7v3.voc;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;
/**
 * Description of the enumeration DependentCoveredPartyRoleType.
 *
 */

@XmlType(name = "DependentCoveredPartyRoleType")
@XmlEnum
@XmlRootElement(name = "DependentCoveredPartyRoleType")
public enum DependentCoveredPartyRoleType {
	@XmlEnumValue("COCBEN")
	COCBEN("COCBEN"),
	@XmlEnumValue("DIFFABL")
	DIFFABL("DIFFABL"),
	@XmlEnumValue("FSTUD")
	FSTUD("FSTUD"),
	@XmlEnumValue("PSTUD")
	PSTUD("PSTUD"),
	@XmlEnumValue("STUD")
	STUD("STUD"),
	@XmlEnumValue("WARD")
	WARD("WARD");
	
	private final String value;

    DependentCoveredPartyRoleType(String v) {
        value = v;
    }
    
     public String value() {
        return value;
    }

    public static DependentCoveredPartyRoleType fromValue(String v) {
        for (DependentCoveredPartyRoleType c: DependentCoveredPartyRoleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
	
}